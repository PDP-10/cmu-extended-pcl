!* PS:<BEEBE>TWENEX.EMACS.94 24-Oct-81 13:25:53, Edit by BEEBE!
!* PS:<BEEBE>TWENEX.EMACS.93 20-Oct-81 21:30:36, Edit by BEEBE!
!* -*-TECO-*- *!

!~Filename~:! !EMACS macros for Twenex environment.!
TWENEX

!& B36 Mode:! !& BLI Mode:! !& REQ Mode:! !& R36 Mode:! !S Set up for editing BLISS code from FN2.!

    :m(m.mBLISS_Mode)

!& BCP Mode:! !& B11 Mode:! !S Set up for editing BCPL code from FN2.!

    :m(m.mBCPL_Mode)

!& EMACS Mode:! !& TEC Mode:! !S Set up for editing TECO code from extension!

    :m(m.mTECO_Mode)

!& FAI Mode:! !S Set up for editing FAIL code from FN2.!

    :m(m.mFAIL_Mode)

!& FOR Mode:! !S Set up for editing FORTRAN code from FN2.!

    :m(m.mFORTRAN_Mode)

!& LSP Mode:! !S Set up for editing LISP code from extension!

    :m(m.mLISP_Mode)

!& MAC Mode:! !& M11 Mode:! !& P11 Mode:! !S Set up for editing assembler code from FN2!

    :m(m.mMACRO_Mode)

!& MID Mode:! !S Set up for editing MIDAS code from FN2.!

    :m(m.mMIDAS_Mode)

!& MSS Mode:! !& MAK Mode:! !& LIB Mode:! !& DEV Mode:! !S Set up for editing SCRIBE source text.!

    :m(m.m SCRIBE_Mode)

!& PAS Mode:! !& PGO Mode:! !S Set up for editing PASCAL code from FN2.!

    :m(m.mPASCAL_Mode)

!& Read Filename:! !S Read a filename from the tty.
The numeric argument indicates GTJFN flags;the 1 bit on means
to set GJ%FOU, the 2 bit means GJ%IFG, 4 means GJ%OLD.
The prompt should be supplied as a string argument, without
trailing colon or space.  Returns a string of the filename read.!

  :I*[1			    !* Read prompt argument.!
  FS JRN IN"N			    !* If replaying journal, use the names!
    :M(M.M &_Journal_String)'	    !* remembered from when we wrote the journal.!
  QBuffer_Filenames[2		    !* Assume using buffer filenames.!
  fsDFile[0 f[DFile

  &2"N ET*.* -3FS D VERS	    !* If looking for multiple filespec.!
    37.F[ :ETMOD 1U2'		    !* Default all fields nicely.!

  FSRGETTY"N FS:ETMODE"N
    FQ2:"L F=02"N 0U2''
    Q2"N FR'"# :I11_(Default_0)'''

  < FS ^RMODE"N :'1<		    !* In ^R mode, keep trying to read a filename!
				    !* until we read one without error.!
    FN @FT
 				    !* On exit, put a CRLF after the filename.!

    FS RGETTY"N
      FS ECHO DIS CFS ECHO DIS'	    !* Clear echo area.!
    "# FS :ET MOD "N :FT Default_is_0
''				    !* No mode line in printing tty.!

    :i*1:_,(			    !* Push ahead prompt to use...!
    &1"N 400000.'+(&2"N 100.')+(&4"N 100000.')):ET    !* Get filename from tty.!
    FS JRN OUT"N		    !* If making a journal, store in it!
      FS D FILE FS JRN WR	    !* the filenames we got, terminated by Altmode.!
       FS JRN WR'
    FS D FILE		    !* And return a string of it.!
    >fg -fstypeoutw 0fs errflg >  !* In ^R, print message and try again.!

!& RUN Mode:! !S Set up for editing Runfiles from FN2.!

    :m(m.mFundamental_Mode)

!& SAI Mode:! !S Set up for editing SAIL code from extension!

    :m(m.mSAIL_Mode)

!& RAT Mode:! !S Set up for editing Ratfor code from FN2.!

    :m(m.mRatfor_Mode)

!& SF3 Mode:! !S Set up for editing SFTRAN3 code from FN2.!

    :m(m.mSFTRAN3_Mode)

!& Subset Directory Listing:! !S Lists subset of current directory, selected by FN1.!

    FS LISTEN"N  '		    !* Stop right away if typeahead.!
    F[ B BIND F[ WINDOW	    !* Save state.!
    G(FS D FILE) fsosteco-1"e -S.'"# -s;' :K I
   :FT HT			    !* Type filename defaults.!
    FS D FN1[1 FS D FN2[2
    1:<EZ1.2.-3>		    !* Get directory in buffer.!
    0[2 0[3 JL 0S,		    !* Make things a bit faster.!
    < .-Z; %2W FB -D 9I
      \+Q3U3 FB -D 9I
      FB -D 2,32I		    !* Make it look nicer.!
      .,.+11F=16-Nov-1858 "E @:F,K I---'	    !* Handle case of file not read!
      0TT FS LISTEN"N  ' FS FLUSHED"N  ' L>	    !* Stop if flushed.!
    HK I Total_of_ Q3\ I_page
    Q3-1"Nsi' I_in_ Q2\ I_file
    Q2-1"Nsi' i.
   HT 

!& TEX Mode:! !S Set to for editing TEX input from FN2.!

    :m(m.m TEX_Mode)

!& TXT Mode:! !& HLP Mode:! !& PUB Mode:! !& RNO Mode:! !& INFO Mode:! !& R Mode:! !& MRN Mode:! !& DOC Mode:! !S Set up for editing text from FN2.!

    :m(m.mText_Mode)

!BCPL Mode:! !C Set up to edit BCPL code.!

    m(m.mLoad_Library)BCPL
    :m(m.mBCPL_Mode)

!BLISS Mode:! !C Set up to edit BLISS code.!

    m(m.mLoad_Library)BLISS
    :m(m.mBLISS_Mode)

!Check Mail:! !C Say if new mail exists.!

 !* Nonzero pre-comma argument inhibits typeout.  Returns nonzero if new mail.!
 f[DFile
 fsOSTeco-1"e etDSK:MAIL.TXT.1'	!* set filename to the official!
 "# etMESSAGE.TXT;1'			!* mailbox filename,!
 fsHSnamefsDSnamew			!* which is in the home directory!
 1:<1,er>"e				!* open mail file without setting!
					!* reference date!
    fsIFCdate-(15.fsIFFDB)"g		!* if write date greater than read date!
      "e @ft[New_mail_exists] 0fsEchoActivew'
      1''				!* return nonzero for ^R or subroutine!
 "e @ft[No_new_mail_exists] 0fsEchoActivew'
 0					!* return zero for ^R or subroutine!

!Compile:! !C Repeat last CCL command.
Unless we are given a numeric arg, we offer to save all files.!

    FF"E M(M.M Save_All_Files)'
    :FR				    !* Clear mode line.!
    :I*Z FS ECHODIS		    !* Put cursor at bottom of screen.!
    0fsecho char		    !* dont echo when continued.!
    ex				    !* Exit and repeat CCL command.!

!Connect to Directory:! !C Connect to directory.
First argument is directory name.  Optional second argument is password.!

    1,fDirectory:_:fc[1	    !* 1: directory name!
    fq1"e fsHSnameu1'		    !* default to login directory!
    1:< q1 fsMSnamew >"e f* '	    !* connect to it, ignore password if!
				    !* there is one!
    1,fPassword:_:fc[2	    !* 2: password!
    fq2"e 1,m(m.m&_Read_Line)Password:_:fcu2'
				    !* if null password from command!
				    !* line, read one from terminal!
    q2,q1 fsMSname		    !* connect with password!
    

!Date Edit:! !C Write standard format edit message at start of file.
Inserts name of presumed output file, time and date of edit and user.!

    j gComment_Start
    qbuffer_filenames f"e w' f[ dfile
    fs d versi"e		    !* If visited version is >,!
      0[0 1:< er fs if versu0 ec> !* find most recent version number (or 0)!
      q0+1 fs d vers'		    !* and add 1.!
    g(fs d file) 32i
    0,(fs date)fs fd conv fs xunam@f6[0 i,_Edit_by_0
    gComment_End i

    

!Expunge:! !C Expunge the connected directory.
String argument is the directory to connect to first.!

    :i*( :i*[2 )[1	    !* get string arguments!
    fq1"g m(m.m Connect) 12' !* if arg connect there first!
    fs expunge			    !* expunge connected directory!
    

!FAIL Mode:! !C Set things for editing FAIL code.!

    M(M.M MIDAS_Mode)
    :I*;_M.L Comment_Begin	    !* Start comments with a space!
    :I*+1M.L Comment_Rounding
    :IModeFAIL
    :M(M.M &_Set_Mode_Line)

!FORTRAN Mode:! !C Set up to edit FORTRAN code.!

    m(m.mLoad_Library)FORTRAN
    :m(m.mFORTRAN_Mode)

!Interlisp Mode:! !C Set things up for editing Interlisp code.
Puts ^R Indent for LISP on Tab, puts tab-hacking rubout on Rubout.
Facilitates an approximation to Interlisp lexical analysis,
but notably ignores square brackets.
Paragraphs are delimited only by blank lines.!

    M(M.M &_Init_Buffer_Locals)    !* A standard mode changing incantation.!
    M.M ^R_Indent_for_Lisp  M.Q I
    1,1M.L Space_Indent_Flag
    1,Q(1,Q. M.QW )M.Q .  !* Exchange rubout flavors.!
    1,10 M.L Comment_Column
    1,(:I*(*_) M.L Comment_Start
    1,(:I*(*_) M.L Comment_Begin
    1,(:I*)) M.L Comment_End
    1,(:I*) M.L Paragraph_Delimiter
    QPermit_Unmatched_Paren"L
      1,0M.LPermit_Unmatched_Paren'
    M.Q ..D
    0FO..Q Interlisp_..D F"N U..D'	    !* Select the Lisp syntax table!
    "# W :G..D U..D		    !* creating it if doesn't exist.!
	Q..D M.V Interlisp_..D
        !* Several characters are handled specially.!
	-1[0 40.< %0*5+1:F..DA > ]0	    !* Make all control chars!
				    !* part of symbols.  We override this for some.!
	95*5+1:F..DA		    !* Back arrows get converted to spaces!
				    !* by Purify.!
        !* The following label, together with the arguments!
	!* to & Alter ..D that are single or double gritches,!
	!* balance.!
	!"!
	1M(M.M &_Alter_..D)	_
______!A"|#A$A%/&A''(())*A+A,A-A.A/A:A;A<A=A>A?A@A[A\A]A^A`A{A|A}A~AA'
    1M(M.M&_Set_Mode_Line) Interlisp 

!List Directories:! !Compare Directories:! !C Command available only on ITS.!
    :i*Command_available_only_on_ITS? fs err

!List Files:! !C Make a quick directory listing!

    f[b bind f[ s string
    qBuffer_Filenamef"e w fs d file' [2  !* If there are any, ...!
    f[ d file et2 et*.*	    !* Set up default filenames from buffer.!
    5,2f List_files[0 et0	    !* Get files to do.!
    fs d fn1u0  fs d fn2u2  0[3   !* 3 is maximum length of name seen!
    1,1110000001.ez0.2.-3	    !* Get directory into buffer.!
    :i*[1 j			    !* 1 is string to check names against.!
    < .-z; .u2			    !* 2 is start of this line.!
      fsosteco-1"e 2<fb. r>'  !* Move past filename and extension.!
      fsosteco-2"e fb. r fb; r'
      q2,.f=1"e		    !* If names the same, ...!
        q2-2,.k f,		    !* Make one longer line.!
	'"# q2,.x1'		    !* Else get new string to use.!
      :l 0,0:fm			    !* Make sure know where we are.!
      fs ^r hpos, q3 f  u3	    !* Keep track of the longest line so far.!
      l > j
    fs width / (q3+1) u2	    !* Get number per line.!
    fs width / q2 u3		    !* Get rounded size for them.!
    < 0u1
      q2< :l 0,0:fm .+2-z;
          %1-q2"n q3*q1 - (fs ^r hpos) , 40.i 2d'
	  > 2:c; >
    fs d dev:f6u1 fs d snam:f6u0
    :ft1:<0>

    ht :fv 0

!MACRO Mode:! !C Set things for editing MACRO code.!

    M(M.M MIDAS_Mode)
    :I*+1M.L Comment_Rounding
    :IModeMACRO
    :M(M.M &_Set_Mode_Line)

!PASCAL Mode:! !C Set up to edit PASCAL code.!

    m(m.mLoad_Library)PASCAL
    :m(m.mPASCAL_Mode)

!Push to EXEC:! !C "Push" to new or existing EXEC inferior to EMACS.
If an inferior EXEC already exists, it is resumed, with its
own inferiors still intact.
QExec Name can be a string giving the filename to load.!

    fm(m.m &_Exit_EMACS)	    !* Clear mode line, auto save, etc.!
    0fo..q Exec_Name[1 q1"e fz'   !* Use default if no name given!
    "# 0fo..q Exec_Fork"e	    !* Otherwise do same thing with specified EXEC name,!
        -1,0fz1 1m.v Exec_Fork' !* which means create if necessary,!
       "# fz''			    !* otherwise resume.!
    

!SAIL Mode:! !C Set up to edit SAIL code.!

    m(m.mLoad_Library)SAIL
    :m(m.mSAIL_Mode)

!Set Terminal Type:! !C Specify terminal type (as string argument).
To get a list of all terminal types, do M-X List LibraryTRMTYP<cr>.
The screen size must have been set by Terminal Length and Terminal Width in EXEC.!

    :m(m.aTRMTYP&_Set_Terminal_Type)

!Ratfor Mode:! !C Set up to edit Ratfor code.!

    m(m.mLoad_Library)Ratfor
    :m(m.mRatfor_Mode)

!SFTRAN3 Mode:! !C Set up to edit SFTRAN3 code.!

    m(m.mLoad_Library)SFTRAN3
    :m(m.mSFTRAN3_Mode)

!Strip SOS Line Numbers:! !C Remove SOS line numbers from the current buffer.
Deletes all words with the low order bit set, and flushes all nulls.
An explicit argument inhibits checking for nulls unless the file has line numbers.!

    z"e '
    j .fsword&1"e ff"n ''    !* No line nums and explicit arg => do nothing.!
    "# 0s			    !* File has line-nums => flush them.!
      < .-z;
	0,.fsword(		    !* Replace word with nulls (and clear low bits)!
	  5:c; )&(-2)"e !<!>'	    !* Looping over any words of all nulls already.!
	0,1a-11."e		    !* Plus if the next char is a tab.!
	  f '		    !* Replace it with a null (we'll delete).!
	:s; ,1a-"e r f  c'	    !* Find end of line; turn CR FF into just LF.!
	.+5/5*5:j;>'		    !* Move to next word boundary!
    j 0s  <:s; r ^ f k>	    !* Then delete all nulls.!
    j 

!^R Dired:! !^R Run MM Dired  for the directory of the current buffer file.
With no argument, edits that directory.
With an argument of 1, shows only the versions of the file in the buffer.
With an argument of 4, asks for input, only versions of that file are shown.!

 QBuffer_Filenamesf"n fs D File  !* If we don't have buffer file names,!
				    !* assume arg of 4!
   FF"E m(m.m DIRED) '	    !* With no arg, pass null string.!
   "# -4"L FSDFN1[..0	    !* With arg of 1 use the FN1 name!
     M(M.M DIRED) ..0 '''
   5,2F Directory_ [..0	    !* With an arg of 4,!
				    !* or no buffer file names!
 m(m.m DIRED) ..0 	    !* We ask for a string arg!
				    !* and pass it along!

!^R Exit to Exec:! !^R Immediate return to Exec.!
          !* Will never be executed.  Just for sake of self-doc of ^C.!
