_
~   w TOPS-20
~  6EGAUGNAL DNAMMOC ELBAMMARGORP dednetxE65
~     
3 6EDIUG S'RESU65
~     AND
8 6LAUNAM ECNEREFER65
~     
$ 6TTOCS yaR65
~   	 Extensions by Michel E. DEBAR
~665
~   O 12 January 1983(
V665~
[
~ T Copyright (C) 1983 Carnegie Mellon University Computation Center
~6muigleB rumaN ,ertneC gnitupmoC PDNF65!
~  ~       1
~  ~  ` CCHHAAPPTTEERRG_______ 11_
 6____________yNNOOIITTCCUUDDOORRTTNNII6~65
~  11..11..)____ PPrrooggrraammmmaabblleey____________ CCoommmmaannddG_______ LLaanngguuaaggeeQ________
~   8 6eht otni rotucexe dna egaugnal a stup CEXE 02-SPOT eht ot noisnetxE LCP ehT65
~  TOPS-20 EXEC. With this high level language and its extensions, users can
6SPOT gnitsixe ekil kool lliw lliw hcihw smargorp LCP nwo rieht etirw ot ylisae65
~  commands complete with parameter substitution and TOPS-20 style recognition.
 6:retneC noitatupmoC ytisrevinU nolleM eigenraC morf TTOCS yaR ot eud si LCP65
~  
~  Carnegie-Mellon University,	
[6,retneC noitatupmoC65
~  Schenley Park
3 6,eunevA sebroF 000565
~  Pittsburgh PA 15213 (phone +1.412.578-26-42).
~  = 6lehciM yb snoisnetxe htiw ,LCP fo noisrev dednetxe na sebircsed launam sihT65
~  E Debar: FNDP Computing Centre, Rue Grandgagnage, 21 B-5000 Namur Belgium
~V6.)muigleB .B .maN.caF 222.95 xelet ,13-60-22.18.23+ enohp(65
~ , You should consult the "TOPS-20 PROGRAMMABLE COMMAND LANGUAGE - User's
6eht fo noitatnemucod etelpmoc eht rof UMC morf "launaM ecnerefeR dna ediuG65
~     1
6.LCP fo noisrev )dednetxe non( laiciffo65
~  11..22..)____ PPCCLL___ UUsseess)____
~ , PCL may be used in a variety of different ways. Users might write friendly
6a sekam noitingocer htiw gnisrap dnammoc ehT .smargorp gnitsixe ot sdne tnorf65
~  very easy way to do parameter passing to a program. Periodic or repetitive
6gnipyt fo tnuoma eht ecuder dluow hcihw senituor LCP ni dedoc eb nac sksat65
~  needed to accurately execute all the steps necessary to complete a piece of
~  production.)
= 6__________________~8                  65
~ " 1
~ , That manual is on our distribution tape in <pcl5.doc>pcl.lpt. The present	
~  manual is in <pcl5.x-doc>pclx.lpt.!
g 2
~  PCL also will provide a means for implementing completely new functions
6a sah resu eht fi ,elpmaxe roF .CEXE tnerruc eht ni elbissop ton era hcihw65
g graphics terminal which takes special support then PCL can be used to provide
g new support commands.
~  System administrators can tailor their EXEC to provide local commands that
6ot hsiw yam rotartsinimda nA .sdnammoc dradnats fo noitcnuf eht edirrevo65
g eliminate the PLOT command if there is no plotter on the system.!
~  ~       3
~  11..33..)____ PPCCLL___ FFeeaattuurreessQ________
~  6:era LCP fo serutaef niam ehT65
~   - ALGOL-like language constructs
y6noitalupinam gnirts - 65
~   - callable procedures with parameters
~   - system services
G 6ecafretni resu elbixelf - 65
~   - program interface
G 6seitilibapac tuptuo/tupni - 65
~  11..44..)____ NNoottaattiioonnaalle__________ ccoonnvveennttiioonnsso___________
~ , In this document the format of commands is given using simple conventions:
~   - [...] is used to denote an optional item.
~   6yb detarapes ,sregetni erom eno setoned "]... 2regetni,[ 1regetni" - 65	
~ @ commas.
~   - {option1 | option2} denotes alternative items.!
g 4!
~  ~       5
~  ~  ` CCHHAAPPTTEERRG_______ 22_
 6_________[EECCAAFFRREETTNNII ____)CCEEXXEE6~65
~ , PCL commands can be written with any text editor. The source for these
6era selif ecruoS .LCP epyt tluafed eht htiw selif ni derots si sdnammoc65
~  compiled into a command by the new EXEC command DECLARE . Once the command is
6tsil eht fo trap a semoceb dna CEXE eht ni derots si ti ,delipmoc yllufsseccus65
~  of commands that the user has available during that job. If the DECLARE
6no depyt eb lliw egassem rorre na ,ecruos LCP eht ni rorre na stceted dnammoc65
~  the terminal along with the line in error and a pointer indicating about where
6taht ta spots noitalipmoc eht detceted si rorre na ecnO .derrucco rorre eht65
~  point.
~ , Any user command which has the same name as an existing command overlays
6etucexe ot desu eb yam LANIGIRO dnammoc CEXE wen ehT .dnammoc gnitsixe eht65
~  any of the standard EXEC commands. Commands may be removed with the UNDECLARE
~  command.
~ , In addition to declaring PCL commands, the user may use the DECLARE command
6______=gnirts ,sdnammoc resu morf dellac eb yam hcihw __________eserudecorp eralced ot65
~  variables[_________, and integerG_______ variables[_________." One PCL source file may contain many
6nevig eb yam selbairav ehT .snoitaralced elbairav dna ,erudecorp ,dnammoc65
~  values by using the SET command with the new options STRING-VARIABLE or
~  INTEGER-VARIABLE. For example:
~  6ttocs )OT( emanym ELBAIRAV-GNIRTS TES@65
~ , The string variable MYNAME may be accessed from any declared command or
~  procedure.
~ , A new option to the INFORMATION command, the PCL-OBJECTS option, will show
~.6.selbairav dna ,serudecorp ,sdnammoc denifed resu lla resu eht65
~ l @INFORMATION (ABOUT) PCL-OBJECTS	
~ j 6REIRUOC ,ENILPULAID ,KCEHCLIAMTEN ,DNIMER ,PRD :sdnammoC65
~ l Procedures: MATCH
~ V 6BOJYM regetnI ,EMANYM gnirtS :selbairaV65
~ , Once the user has a set of procedures and commands defined, these may be!
g 6
g saved in an ENVIRONMENT using the ENVIRONMENT option to the new PRESERVE
6eht htiw dnammoc ERALCED eht esu ,tnemnorivne na llacer oT( .dnammoc65
g ENVIRONMENT option. Commands and procedures in environment files are stored
6yam resu ehT .deralced nehw delipmocer ton era yeht os ,tamrof lanretni na ni65
g declare multiple ENVIRONMENT files and the commands from each environment will
6no detsil era denifed)er( sdnammoC .tsil dnammoc CEXE s'resu eht ot dedda eb65
g the user terminal unless you use the /NOCONFIRM option of DECLARE.!
~  ~       7
~  ~  ` CCHHAAPPTTEERRG_______ 33_
 6________QEEGGAAUUGGNNAALL ___LLCCPP ___EEHHTT6~65
~  33..11..)____ GGeenneerraallG_______ CCoommmmaannddG_______ FFoorrmmaatt=______
~  6: si dnammoc a fo noitinifed lamrof ehT65
~ l COMMAND name;	
= 6tnemetats LCPG 65
~ , A simple example would be: 
M6;elpmis DNAMMOC65	
~ l Display "This is a simple command";
W 6 neht lcp.elpmis elif eht ni erew senil 2 evoba eht fI65
~ l @DECLARE PCL simple.pcl
~    6 :sepyt resu eht fI .CEXE sresu eht otni elpmis dnammoc eht retne dluow65
~ l @SIMPLE
9 6 neht tpmorp "@" eht ta65
~ l This is a simple command
% 6.lanimret s'resu eht no depyt eb dluow65
~ , The most general (and useful) simple definition of a command is:
~ l COMMAND name;	
[6nigeB65
~ l  [INTEGER, STRING and EXTERNAL declarations]
~ l  PCL-Statement;
[6];...[ 65
~ l  End
~  where any number of PCL statements separated by semi-colons may be between the
6tsum stnemetats lanretxE dna gnirtS ,regetnI ___lla taht etoN .riap DNE-NIGEB65
~  appear before any other PCL statement.
~    6elgnis a otni stnemetats LCP fo rebmun yna puorg ot desu eb yam ___________odnE...nigeB65
~  statement. Note that braces {...} may be used in lieu of Begin..End: 
~ l if i > 100 then begin	
) 6;"egnaR fo tuO" yalpsid 65
~ l  i = 50;
)6;dne 65
~ , Statement[_________ labels=______ may be up to 40 characters long and are terminated with a!
g 8
g colon. Labels are used by the GOTO statement (see page 61) and by the parse
g error handler (see page 34): 
U 6;rorroh otog neht 001 rtg i fi65	
~ H ...
 6:rorroH65
~ H  display "Can't proceed";
~ H  exit;
~  CommentsQ________ may be placed anywhere in PCL source files.
~ ` 6eht fo dne eht ot dnetxe dna kram noitamalcxe na htiw trats ________Qstnemmoc ______=elpmiS65
g current line: 
~ H Display "Hi" +e !This is a comment	
~ H Q " Mate";
~  Inline=______ CommentsQ________ are enclosed between !{...}!. They may appear in the middle
6enilnI .detsen eb yam yeht dna senil lareves revo dnetxe yam yeht ,enil a fo65
g comments are useful for commenting out large sections of code, long comments,
g and in-line commenting:
6eht gniR {!65	
~ H ) terminal Bell }!
~ H 
~ H call $Jsys1 ( 8%74 !{pbout}!, 8%7);
g 33..22..)____ PPCCLL___ CCoonnssttaannttss[_________
~  PCL knows of only two types of constants: integers and strings.
o 6regetnI .)seititnauq tib 63 sa desserpxe( sregetni dengis era ________QsregetnI65
g constants are of the form: 
k6.1 tamroF65	
~ H Q number
=6.2 tamroF65
~ H Q base%number
g The first form is a number in base 10. The second form allows to enter numbers
6"z" hguorht "a" srettel eht 01 naht rehgih sesab roF .63 ot 2 morf esab yna ni65
g are used to enter the digits 10 through 35: 
u6)lamiced(~  2165	
~ H 8%14y (octal)
3 6)lamicedaxeh(y C%6165
~ H 8%777777777777 (actually -1)!
~  ~       9
6ot srebmun trevnoc ot desu era regetni$ dna gnirts$ serudecorp metsys ehT65
~  strings and back, with an optional radix.
~  o 6eht gnisu detanetacnoc yleerf eb yam yehT ."gnirts" mrof eht fo era _______GsgnirtS65
~  "+" operator. Presently string constants are limited to 512 characters. String
~  variables do not have that restriction.
~  33..33..)____ PPCCLL___ VVaarriiaabblleess[_________
~ , PCL has two types of variables: string=______ and integerG_______ variables. Variables
~  may be either local to a procedure or global.
~  G 6fo gninnigeb eht ta deralced eb tsum sdnammoc LCP ni desu eb ot selbairaV65
~  the command. For example: 
/6;elpmis DNAMMOC65	
~ l BEGIN
~  6;lluf_ni_eman GNIRTS 65
~ l  INTEGER count;
~  6;ezis_neercs REGETNI LANRETXE 65
~ l  ...
6DNE65
~  would define the local variables name_in_full (string) and count (integer),
6.)regetni( ezis_neercs elbairav labolg a ot ssecca erudecorp eht evig dna65
~  Variable names may be any combination of letters, numbers, and the under-score
~t6.htgnel ni sretcarahc 04 ot pu eb yam semaN .retcarahc65
~ , Variables may be assigned values using a simple assign statement. 
~ l COMMAND simple;	
o6NIGEB65
~ l  STRING name_in_full;
G6;tnuoc REGETNI 65
~ l  count = 3;
~ B 6;"ttocS yaR .J" = lluf_ni_eman 65
~ l  ...
6DNE65
~ , Local3_____ variables[_________ are known only within the command or procedure in which
~  they are declared.
~ , Global=______ variables[_________ are known to any procedure which declares them external.
36 :sdnammoc cexE eht yb ro ,sdnammoc LCP yb rehtie detalupinam eb yam yehT65!
g 10
~ H @DECLARE INTEGER-VARIABLE or	
~  6)35 egap ees(G ELBAIRAV-GNIRTS ERALCED@65
~ H 
~ H @SET INTEGER-VARIABLE or
~ B 6)98 egap ees(o ELBAIRAV-GNIRTS TES@65
~ H 
~ H @INFORMATION (about) VARIABLE variable_name
 6)46 egap ees(6~>65
g If they are to be used by a specific set of library routines, it is best to
~V6 :elif ecruos LCP eht ni selbairav labolg sa meht eralced65
~ H integer screen_size~  ! global variable	
~ H 
~ 8 6;neercs-tes dnammoc65
~ H begin
~ H  external integer screen_size;
~ H ...
6dne65
g 33..44..)____ RReesseerrvveeddQ________ nnaammeess3_____
~  PCL uses a number of reserved names which you may not use outside of their
Q6 :seman elbairav sa meht esu ton yam uoy ,ecnatsni roF .txetnoc lamron65
g ABORT~  y IF~  ; 6PLEHDTS65	
g ALWAYS~  y INPUT~   6GNIRTS65
g BEGIN~  y INRANGE~  	 6MYNONYS65
g BINARY~  y INTEGER~ h 6NEHT65
g CALL~  y INVISIBLE~ T 6EMIT65
g CASE~  y INVOKE~ ^ 6OT65
g CLEARTYPEOUT~  y KILLPROGRAM~ r 6MARGORPOT65
g COMMAND~  y LEQ~  ' 6NIEPYT65
g DATE~  y LET~   6LITNU65
g DCM~  y LSS~   6ELIHW65
g DEFAULT~  y NEQ~   6DLIW65
g DEFAULT_DEV~  y NOECHO~ | 6SDROW65
g DEFAULT_DIR~  y NOHELP
g DEFAULT_EXT~  y NOINDIRECT
g DEFAULT_GEN~  y NOORIGINAL
g DEFAULT_NAM~ 6 6PON65
g DELETED~  y NORETURN
g DISPLAY~  y OF
g DO~  y ORIGINAL
g DOCOMMAND~  y OTHERWISE
g ELSE~  y OUTPUT
g END~  y PARSE
g EQL~  y PARSEONLY
g EXIT~  y PASO
g EXTERNAL~  y PASSOUTPUT
g FROM~  y PROCEDURE
g GEQ~  y PROMPT
g GETTYPEOUT~  y RADIX
g GOTO~  y RETURN
g GTR~  y SAVE
g GUIDE~  y SELECT
g HELP~  y SELECTALL!
~  ~       11
~  33..55..)____ SSttrriinngg=______ MMaanniippuullaattiioonny____________
~ , Strings may be concatenated using simple addition statements. 
~>6lluf_ni_eman + " emocleW" = gnirts_cnoc65	
~ l other_string = other_string + "appended text."
i6 :sgnirts morf detcartxe eb yam sgnirtsbuS65
~ l extr_string = conc_string[n:m]
~    6ot sretcarahc fo rebmun eht si m dna rebmun retcarahc gnitrats eht si n erehw65
~  extract. The leftmost character is character position 1. The user may use
~   " th
~  e 6.gnirts eht fo dne eht ot retcarahc n eht morf tcartxe ot ]*:n[65
~ , The length of a string may be obtained using the $LENGTH system service. 
~ l count = $LENGTH(conc_string)
~    6elbairav regetni eht ot gnirts_cnoc gnirts eht fo htgnel eht ngissa dluow65
~  count.
~ , A PCL routine may search for a substring of a string by using the $SEARCH
~  system service: 
~  # 6 )"TTOCS",gnirts_cnoc(HCRAES$ = tnuoc65
~  would assign the starting location of the string SCOTT to count if it was
=6.0 snruter hcraes$ dnuof si hctam on fI .gnirts_cnoc gnirts eht ni dnuof65
~  33..66..)____ LLooggiiccaallG_______ eexxpprreessssiioonnsso___________
~ , Several PCL statements use logical expressions comparing integers or
6taht oS .ecneuqes retcarahc iicsA eht no desab si nosirapmoc gnirtS .sgnirts65
~  "ABC" is less than "ABD" for instance.
) 6 :si noisserpxe lacigol a fo xatnys ehT65
~ l operand1 logical-operator operand2 
~ , where:
G 62dnarepo,1dnarepo65	
~  1 are both integer expressions or both string expressions
~  operator!
g 12
G 6:fo eno si65
~    - LSS or <	
6=< ro QEL - 65
~    - EQL or =
6>< ro QEN - 65
~    - GEQ or >=
6> ro RTG - 65
g 33..77..)____ PPrroocceedduurreesse__________
~  The format of a procedure definition in a source file is the same at that
6drow eht htiw decalper si DNAMMOC drow eht taht tpecxe noitinifed dnammoc a fo65
g PROCEDURE. A RETURN statement will return to the calling PCL routine. 
~ H PROCEDURE doit;	
o6nigeB65
~ H  ...
 6nruteR65
~ H End
g To use the procedure DOIT in a command it must be declared and then called. 
~ H COMMAND callit;	
o6nigeB65
~ H  EXTERNAL PROCEDURE doit;
~ H  ...
= 6;tiod LLAC 65
~ H  ...
6dnE65
~  Parameters to procedures are declared by placing the list of parameters in
6,.e.i ,depyt eb tsum sretemarap ehT .eman erudecorp eht retfa sisehtnerap65
g they must be specified as being either integers or strings. 
 6;)1_arap GNIRTS ;2_arap,1_arap REGETNI( tiod ERUDECORP65
~  Procedures may have a type and thus return a value. To have a typed
6ERUDECORP eht fo tnorf ni decalp si GNIRTS ro REGETNI drow eht erudecorp65
g keyword in the source file. The value to be returned is placed after the
~.6 .epyt etairporppa eht fo noisserpxe yna eb yam sihT .NRUTER65
~ H INTEGER PROCEDURE upone (INTEGER in);	
~ H RETURN in+1
~  Procedures may modify their arguments (they are Input and Output formals):
~ H PROCEDURE CAT (string s1,s2,s3);	
~ H s3 = s1 +s2;!
~  ~       13
~  33..88..)____ PPCCLL___ FFllooww)____ CCoonnttrroollG_______
~ , PCL provides several ways to control the sequence of execution:
~   - ABORT
6TIXE - 65
~   - RETURN
[ 6LITNU ,ELIHW ,OD - 65
~   - IF ... THEN ... ELSE ...
~   - CASE
 6TCELES - 65
~   - GOTO
 6TTRROOBBAA ..11..88..3365
~ , Abort stops the execution of a PCL command and returns at Exec command
y6.44 egap eeS ."?" yb dedecerp egassem rorre na gnitnirp retfa level65
~  33..88..22.. EEXXIITT
~ , Exit stops the execution of a PCL command without printing any message. see
~  page 58.
) 6NNRRUUTTEERR ..33..88..3365
~ , Return exits from the current PCL procedure and returns to its caller. If
~  used in a command RETURN acts as EXIT.
~$6LLIITTNNUU ,,EELLIIHHWW ,,OODD ..44..88..3365
~ , DO, WHILE, and UNTIL are available for program loops. These may be used in
~  the following combinations:
~ B 6noisserpxe lacigol ELIHW tnemetats LCP OD .1 65
~   2. DO PCL statement UNTIL logical expression
6tnemetats LCP OD noisserpxe lacigol ELIHW .3 65
~   4. UNTIL logical expression DO PCL statement!
g 14
_ 6...65	
~ H i = 3;
 6nigeb od65
~ H  display i;
6;1 - i = i 65
~ H  end
6litnu65
~ H  i eql 0;
g 33..88..55.. IIFF
~  The IF statement will execute a PCL statement if the condition is true. IF
g may have an ELSE clause. 
7 6NEHT "zyx" = lav_rts FI65	
~ H ) PCL statement
~ H ELSE
y 6tnemetats LCP) 65
g 33..88..66.. CCAASSEE
~  The case statement provides a method of selectively executing PCL
6eulav elbairav ehT .elbairav regetni na fo eulav eht no gnidneped stnemetats65
g is tested for a match with specified constants. If a match is found the
g corresponding PCL statement is executed: 
6NIGEB fo 01 ot 1 MORF tnuoc ESAC65	
~ H ) 1,2e : BEGIN ... END;
6;DNE ... NIGEB : 01 ,6 OT 3) 65
~ H ) 5y : BEGIN ... END;
6DNE ... NIGEB := EGNARNI) 65
~ H ) OUTRANGE3 : BEGIN ... END
~ H END
6TTCCEELLEESS ..77..88..3365
~  The SELECT statement is similar to the CASE statement. Instead of choosing
6yrartibra gnoma sesoohc TCELES ,egnar a ni seulav regetni fo tes a gnoma65
g expressions. The expression and the test values must be of the same type,
g either integer or string.
A 6NIGEB fo rav_rts TCELES65	
~ H Q "abc"3 : BEGIN ... END;
6;DNE ... NIGEB :3 "zyx"Q 65
~ H Q OTHERWISE : Display "Not found"
~ H Q END
~  In the above example.% If str_var contains the string abc then the
6si rav_rts fI .detucexe eb lliw :"cba" retfa riap DNE-NIGEB eht ni stnemetats65!
~  ~       15
6esac siht ni ,detucexe eb lliw esualc ESIWREHTO eht neht zyx ron cba rehtien65
~  it will display 
 6dnuof toN65
~  on the terminal and proceed to the next PCL statement after the SELECT
~  statement.
3 6LLLLAATTCCEELLEESS ..88..88..3365
~ , The SelectAll statements is basically similar to Select, except that after
~B6 :sehctam erom dnif ot yrt ot no seog ti esac eno gnitucexe65
~ l SELECTALL int_var of begin	
= 6;"3 ro 1" yalpsid :G 3,1) 65
~ l ) 2,4G : display "2 or 4";
6;"2 ro 1" yalpsid :) 2 OT 1) 65
~ l ) ALWAYS) : display "Always";
Q 6;"4,3,2,1 rehtieN" yalpsid : ESIWREHTO) 65
~ l ) end;
~  If Int_var is 2, this will display "2 or 4", then "1 or 2" and "always".
6esac suoiverp on fi ylno sehctam ESIWREHTO ,hctam a sevig syawla SYAWLA65
~  matched (for instance if int_var is 5).
~  33..88..99.. GGOOTTOO
~ , The GOTO PCL statement causes an unconditional transfer to a label. 
~ l COMMAND xfer;	
Q6NIGEB 65
~ l  ...;
 6:1pool 65
~ l  ...;
= 6;1pool OTOG 65
~ l  ...
6DNE65!
g 16!
~  ~       17
~  ~  ` CCHHAAPPTTEERRG_______ 44_
 6________QSSEECCIIVVRREESS ______=MMEETTSSYYSS6~65
~ , Various system services are provided to return specific system information
~  or perform system functions.
Q6_________[ssttnnaattssnnooCC ______=mmeettssyySS ____)..11..4465
~ , PCL provides pre-defined constants that are useful in writing PCL routines,
o6.serudecorp metsys LCP emos ot stnemugra eht yficeps ot yrassecen ro65
~  $$AAppppeenndd[ INTEGER - An option to $OPEN for append mode.
36.nruter egairrac a tsuj sniatnoC - GNIRTS~  rrCC$$65
~  $$CCrrllffo STRING - Contains a carriage return and a line feed.
[6.edom tupni rof NEPO$ ot noitpo nA - REGETNIe ttuuppnnII$$65
~  $$LLff~  STRING - A string containing a line feed.
~ 8 6.gnirts llun a snruter ,:LUN ekil gnirts etirw/daeR - GNIRTSy lluuNN$$65
~  $$OOuuttppuutt[ INTEGER - An option to $OPEN for output mode.
~ $ 6eht rof desrap yltnerruc elif eht seificepS - REGETNIe eessrraaPP$$65	
~  1 $File_Dev, $File_Dir, $File_Dir, $File_Nam, $File_Typ,
6metsys teSeliF$ dna S_ofnIeliF$ ,I_ofnieliF$ ,neG_eliF$65
~  1 procedures (see page 22).
~   6.retcarahc etouq elbuod a gniniatnoc gnirts A - GNIRTSe eettoouuQQ$$65
~ , Other constants are provided by PCL specifically to ease the use of certain
~  system procedures: see pages 21, 23.
~$6_________[sseellbbaaiirraaVV ______=mmeettssyySS ____)..22..4465
~ , Some system procedures look like variables and may be used in most
6eb yam selbairav eseht fo emoS .elbairav a esu ot swolla LCP erehw stnemetats65
~  changed by the user (eg the prompts).
~ . 6:era selbairav metsys fo esu eht no snoitcirtser ehT65
~   - they may not be used as the arguments to PARSE options:!
g 18
~ H PARSE (KEYWORD (WORDS(...),	
~ B 6;)) yrotceriDdetcennoC$ TLUAFED~ $ 65
~ H 
~ H Q is wrong and must be replaced by
~ H 
~ H mydir = $ConnectedDirectory;
6,)...(SDROW( DROWYEK( ESRAP65
~ H ~ $ DEFAULT mydir));
~   6.colrtS$ ot tnemugra sa desu eb ton yam elbairav metsys gnirts a - 65
~  Most of these restrictions are NOT detected when you declare a PCL
6eht gnitucexe nehw ruoivaheb gnorw ot sdael noitaloiv rieht tub ,tnemetats65
g command.
~  The system service variables are:
~644ccaa$$ ,,33ccAA$$ ,,22ccAA$$ ,,11ccAA$$65	
~   INTEGER - Contain the first four register values after the
~   last $Jsys executed.
~ B 6.boj tnerruc eht fo tnuocca ehT - GNIRTSQ ttnnuuooccccAA$$65
g $$AARRPPAAnneett__NNooddee STRING - The system's ARPAnet node name. This is a null	
~L6.tenAPRA eht no ton si metsys eht fi gnirts65
g $$AAttoommo STRING - After a PARSE statement, contains the text typed in	
6).nekoT dna ,ammoC ,LOE ,esioN tub lla( sepyt esrap tsom rof65
g $$BBaattcchh__JJoobb= INTEGER - Non-zero if the job is a batch job.
~ $ 6dnammoc tsal eht fo txet etelpmoc eht sniatnoC - GNIRTSQ ddnnaammmmooCC$$65	
~   parsed, or of the current command up to the last field parsed
~   with a PARSE PCL statement.
g $$CCoonnnneecctteeddDDiirreeccttoorryy	
~   STRING - The name of the currently connected directory
G 6.tamrof lanretni metsys ni emit dna etad tnerruc ehT - REGETNI[ ddaattrruuCC$$65
~   2
665#
g                   g __________________
{ 2
~  Date)____ and___ Time:3_____ Tops 20 stores dates and time internally in a single integer	
6ni dna ,8581 rebmevoN fo ht81 eht ecnis detnuoc yad eht flah tfel eht ni htiw65
g the right half the fraction of the day elapsed since midnight. The fraction is
6a gniretne nehW .81**2 fo rotanimoned a sah taht noitcarf a fo rotaremun eht65
g date and time into Tops 20, all usual formats are valid: 3-DEC-83, 03/DEC/83,
6,daTtupnI$ ,etaD$ ,datruC$ senituor metsys ehT .cte ,MP05:4 ,05:61 ,15:8065
g $OutputTad, $ExpandTad and $MergeTad deal with dates and times.!
~  ~       19
~`6tamrof YY-NOM-DD ni etad tnerruC - GNIRTSo eettaaDD$$65
~  $$DDEECCnneett__NNooddee) STRING - The system's DECnet node name. This is a null string	
~36.tenCED a no ton si metsys eht fi65
~  $$DDiirreeccttoorryy= STRING - After executing a parse of Directory(ies) with PARSE	
6tnerruc eht fo eman eht sniatnoc ,TSILYROTCERID ro YROTCERID65
~  1 directory parsed, including the angle brackets ("<...>"). (see
~  1 page 33).
~  $$EEMMAACCSSTTeerrmmiinnaall INTEGER - Returns a 1 if the current terminal can be	
6ohw setis dna UMC[ .ton fi 0 ,SCAME yb desu "ylevitceffe"65
~  1 customize PCL only].
~   $ 6emos ro tnemetats ELIF ESRAP a gnitucexe retfA - GNIRTSe LLeelliiFF$$65	
~  1 similar PARSE (INPUTFILE, OUTPUTFILE, FILELIST), this contains
6,mrof' tsegnol' eht' ni( deretne( eman( elif( eht65
~  1 DEV:<DIRECTORY>FILE.EXT.VERSION
~  3 6eman elif eht sniatnoc siht emanelif a gnisrap retfA - GNIRTSe NNeelliiFF$$65	
~  1 entered in the normal form, FILE.EXT.VERSION
~ . 6eman elif eht sniatnoc siht emanelif a gnisrap retfA - GNIRTSe SSeelliiFF$$65	
~  1 entered in the form FILE.EXT. It will contain device: and
6ecived detcennoc eht morf tnereffid era yeht fi >yrotcerid<65
~  1 and directory.
~  $$FFiilleeVVe INTEGER - After parsing a filename this contains contains just	
~B6elbairav regetni na sa rebmun noitareneg eht65
~  $$JJoobbNNooe INTEGER - The number of the current job
~ B 6.sliaf ti nehw 0 ot ,sdeeccus sysJ$ nehw 1 ot teS - REGETNI[ kkOOssyyssJJ$$65
~  $$LLaassttEErrrrCCooddee) INTEGER - The number of the last JSYS error
)6rorre SYSJ tsal eht fo txet ehT - GNIRTS= rroorrrrEEttssaaLL$$65
~  $$PPrroommppttEEnnbb= STRING - The standard enabled prompt string, may be changed.
 6eb yam ,gnirts tpmorp dnammocbus delbane dradnats ehT - GNIRTS bbuuSSbbnnEEttppmmoorrPP$$65	
~  1 changed.
~  $$PPrroommppttRReegg= STRING - The standard prompt string, which may be changed if	
~=6 :elbatius ton si "@" lausu eht65
~ l $PromptReg = "Tops20>";
~   H 6eb osla yam ,gnirts tpmorp dnammocbus dradnats ehT - GNIRTS= bbuuSSttppmmoorrPP$$65	
~  1 changed.
~  $$TTeerrmmNNuummbbeerr3 INTEGER - The number of the controlling terminal!
g 20
g $$TTeerrmmWWiiddtthh= INTEGER - The terminal width of the controlling terminal.
6.lanimret gnillortnoc eht fo htgnel lanimret ehT - REGETNI3 hhttggnneeLLmmrreeTT$$65
g $$TTiimmeeo STRING - Current time in HH:MM:SS format.
~ L 6gnillortnoc eht fo )%PYTTG( xedni epyt lanimret ehT - REGETNIe eeppyyTTTT$$65	
~   terminal.
e6ttnnuuooCC__ddaaeehhaaeeppyyTT$$65	
~   INTEGER - The number of characters which have been typed-ahead
~   on the controlling terminal.
~  Q 6TSILRESU ro RESU ESRAP htiw eman resu a gnisrap retfA - GNIRTSo rreessUU$$65	
~   this contains the current User Name parsed, (without angle
~36.)33 egap ees( .)">...<" stekcarb65
g $$UUsseerrNNaammeeG STRING - The user name of the current job
~ L 6rebmun ehT :esraP a yb denruter rebmun a sniatnoC - REGETNIe eeuullaaVV$$65	
~   typed in for a Number field, the value for a Keyword or
o6.emiTyaD a rof emit dna etad lanretni eht ro ,hctiwS65
g $$XXaattoomme STRING - Contains the atom parsed by the last PARSE statement.	
6,tsiLresU ro tsiLyrotceriD ,tsileliF a gnisrap nehw taht etoN65
~   this does not contain the whole field but only the last atom
~)6.SYSJ dnmoC eht yb desrap yllautca65
g 44..33..)____ SSyysstteemm=______ PPrroocceedduurreesse__________
~  PCL provides pre-defined procedures.' Some are typed procedures and
6rieht nruter srehtO .stnemetats LCP ni selbairav ekil desu eb yam erofereht65
g results in parameters. In the following list of system procedures, if a
6,noitpircsed eht sedecerp REGETNI ro GNIRTS neht eulav a snruter erudecorp65
g otherwise we indicate PROCEDURE. A simple procedure that does not return a
g value must be called: 
~ 2 6;)TUPNI$ ,"TAD.TSET"( NEPO$ = HC65	
~ H ...
~  6;)HC( ESOLC$ LLAC65
g $$AAnndd (int1, int2)	
~   INTEGER - Returns the bitwise AND of the integers int1 and
~   int2.
=6)lennahc( eessoollCC$$65	
~   PROCEDURE - Closes the file that is open on Channel.
g $$CCvvIIttCC (integer)	
~   STRING - Returns the character whose value is equal the!
~  ~       21
6.sretcarahc lortnoc gnitalupinam rof lufesu si sihT .regetnI65
~  $$CCvvCCttII (string) INTEGER - Converts the first character in String into an	
6.noitalupinam retcarahc lortnoc rof lufesu si sihT .regetni65
~  $$DDiirreeccttoorryyIInnffoo__II (directory, code)	
e6- REGETNI65
~  $$DDiirreeccttoorryyIInnffoo__SS (directory, code)	
~   8 6regetni nruter S_ofnIyrotceriD$ dna I_ofnIyrotceriD$ - GNIRTS 65
~  1 or string information that may be obtained using the GTDIR or
6ecnerefeR sllaC rotinoM 02 spoT eht ot refer( s'SYSJ LADTG65
~  1 Manual for more details). Directory is the directory name
6ni decudorper si tuoyal kcolb yrotcerid RIDRC ehT .)gnirts(65
~  1 appendix II.
~  1 $DirectoryInfo_I returns an integer. It admits the following	
~  1 values for Code:~  1 
~  1 $CDDFEe default off-line expunge date and time (-- not	
~6)-- 5v 02spot ni detnemelpmi tey65
~  1 $CDDNEe -- not yet implemented in tops20 v5 --
~B6noitcetorp yrotceride TPDDC$65
~  1 $CDFPTe default file protection
~ ` 6tey ton --( etad noitaripxe enil-no tluafede NELDC$65
~   T implemented in Tops 20 V5 --)
y6atouq ksid gnikrowe QILDC$65
~  1 $CDLLDe date last login
) 6atouq ksid tnenamrepe QOLDC$65
~  1 $CDMODe directory mode word
)6rebmun yrotceride MUNDC$65
~  1 $CDPRVe capabilities word
~ B 6peek ot snoitareneg fo rebmun tluafede TERDC$65
~  1 $CDSDQe maximum number of subdirectories
~  6LADTG eht yb denruter sa( desu ecaps ksiDe DSUDC$65
~   T Jsys, and usually not correct under Tops20
~   T V5).
~   $ 6gniwollof eht stimda tI .gnirts a snruter S_ofnIyrotceriD$65	
~  1 values of Code:
~ B 6spuorg yrotceridbuse GUCDC$65	
~  1 $CDDACe default account string
G6spuorg yrotceride PGDDC$65
~  1 $CDPSWe password string
36spuorg resue PGUDC$65
~  1 The user/directory groups and the subdirectory groups are	
6yb detarapes srebmun puorg eht lla htiw gnirts a sa denruter65
~  1 commas. For example: !
g 22
~ H  ! User groups	
~   6;)PGUDC$ ,">EOD<"( s_ofniyrotcerid$ yalpsid65
~ H  ! Default account
~ ` 6;)CADDC$ ,">EOD<"( s_ofniyrotcerid$ yalpsid65
~ H  ! Protection
~ H display $string ( $Directoryinfo_I("<DOE>", $CDDPT), 8);
 6.LCP ni noitcnuf teSyrotceriD$ on si ereht yltneserP65
g $$EEooff (channel) INTEGER - Set to -1 if a $READ reaches an end of file on	
~   Channel, otherwise returns 0.
~   6)etunim ,ruoh ,keew fo yad ,htnom fo yad ,htnom ,raey ,etadi( ddaaTTddnnaappxxEE$$65	
~   PROCEDURE - Converts the date and time held in internal format
6fo yad ,htnom ,raey eht gnitneserper sregetni 6 otni etadI ni65
~   month, day of week, hour and minute. The converse is done by
~   $MERGETAD.
36GNIRTS )lif( vveeDD__eelliiFF$$65
g $$FFiillee__DDiirr (fil) STRING
6GNIRTS )lif( mmaaNN__eelliiFF$$65
g $$FFiillee__TTyypp (fil) STRING
g $$FFiillee__GGeenn (fil) STRING - $File_Dev through $File_Gen return the part of the	
6,eciveD eht ylevitcepser gnisserpxe liF fo eman elif65
~   Directory, Name, Type and Generation.# Fil may be either
6S_ofnIeliF$ ees( eman elif a ro ,rebmun lennahc a ro ,esrap$65
~   22).
 6)edoc ,lif( II__ooffnnIIeelliiFF$$65	
~   INTEGER
[ 6)]tamrof,[ edoc ,lif( SS__ooffnnIIeelliiFF$$65	
~    STRING - $FileInfo_I and $FileInfo_S return information about
6ot noitamrofni eht dna liF yb detceles si elif ehT .elif a65
~   return is selected by Code.
~.6:eb yam liF65~   
~   $Parsee the file currently being parsed by a PARSE	
~t6,TSILELIF ESRAP ro ELIF65
~   a channel number	
~   0 for a file currently opened by a call to
~   0 $open,
~    6emos fI .gnirts a sa nevig si emanelif ehT= emanelif a65	
~   0 parts of the file name are omitted they
6,yrotcerid dna ecived detcennoc eht ot tluafed65
~   0 null file type, and highest existing
6eb ton yam flesti eman ehT .noitareneg65!
~  ~       23
~   T defaulted.
~  e 6eliF( BDF elif eht morf regetni na snruter II__ooffnnIIeelliiFF$$65	
~  1 Descriptor Block). For $FileInfo_I code is the index of the
6eht eeS .)kcolB rotpircseD eliF( BDF eht ni detseuqer drow65
~  1 Tops20 Monitor Calls Reference Manual for details. Appendix I
6rof dedivorp era stnatsnoc LCP .BDF eht fo tuoyal eht sevig65
~  1 all permissible codes:
~  6kcolb xedni elif fo sserdda kside RDABF$65	
~  1 $FileAddressG idem 
~  y 6ni( ksid morf deteled nehw dah elif ezise TBBBF$65
~   T pages)
~.60KBBF$65
~  1 $FBBYVe file i/o information
e 6elif eht fo etirw/daer fo tnuoce TNCBF$65
~  1 $FBCREe date last written either by user or system
~6)etad etirw "metsys"(65
~  1 $FileCreation= idem 
) 6etad noitaerce VRCBF$65
~  1 $FBCTLe control word
36 mediG lortnoCeliF$65
~  1 $FBFETe off-line expiration date
G 6srebmun yrotcerid dna noitarenege NEGBF$65
~  1 $FBNETe on-line expiration date and time
~$6sedoc ssecca elife TRPBF$65
~  1 $FileProtection) idem 
3 6daer tsal etade FERBF$65
~  1 $FileReade idem 
~  6elif ni setyb fo rebmune ZISBF$65
~  1 $FileSizee idem 
~  y 6)gnivihcra( epat ot nettirw tsal saw elif etade TDTBF$65
~  1 $FBUSWe user settable word
e 6resu eht yb nettirw tsal etade TRWBF$65
~  1 $FileWrite[ idem 
~  y 6yb ot detniop noitamrofni morf gnirts a snruter SS__ooffnnIIeelliiFF$$65	
~  1 the FDB, or the result of a JFNS Jsys call, with specific
6rotinoM 02 spoT eht ot refeR( tamroF yb nevig stib gnittamrof65
~  1 Call Reference Manual for details): The values of Code for
6seulav laiceps ro ,stesffo BDF rehtie era S_ofnIeliF$65
~  1 requesting a specific function):
36tnuocca elife TCABF$65	
~  1 $FileAccountG idem 
 6rohtua elife TUABF$65
~  1 $Authory idem 
~  y 6eht nruter tsum s_ofnIeliF$ taht seificepse TMFBF$65
~   T result of a JFNS Jsys, using the format bits
~6365
~   T specified in Format.
~                    ~  __________________
~ " 3
~ , An obsolete format of $FileInfo_S specified that if code was an integer	
6eht htiw sysJ SNFJ a yb denruter gnirts eht saw tluser eht 36 naht retaerg65
~  formatting parameter set to the field code minus 64.!
g 24
~   $FBLWRe last writer of file	
y6 mediy retirW$65
~   $FileSet allows to change the information read by $FileInfo_I	
~   and $FileInfo_S.
6)eulav ,ksam ,edoc ,lif( tteeSSeelliiFF$$65	
~   PROCEDURE - $FileSet allows to set the information contained
6rotpircseD eliF eht fo noitanalpxe etelpmoc a rof( BDF eht ni65
~   Block, refer to the Tops20 Monitor Calls Reference Manual).
6ton era metsys gnivihcrA eht ot gnitaler serutaef ,yltneserP65
~   implemented.
~   Fil___ is selected as for $FileInfo: $Parse, or channel number,	
~   or filename (see page 22).
~  e 6.egnahc ot tnaw ew BDF eht fo yrtne hcihw senifed ____)edoC65	
~   Permissible values are the same as for $FileInfo (see page
6yfidom ot tnaw ew taht yrtne eht fo tesffo BDF eht si tI .)3265
~   (see the list of codes page 23, and appendix I for a
6a ot retniop a si yrtne eht fI .)BDF eht fo noitpircsed65
~   string, the information to be changed is the string itself,
~   not the pointer.
~   Mask)____ is an integer indicating the bit positions that we want	
6eb ot snoitisop lla ni seno niatnoc tsum tI .egnahc ot65
~   changed. If the information to be changed is a string, this
~   argument is ignored.
~   $ 6eht no gnidneped ,gnirts a ro regetni na rehtie si _____3eulaV65	
~   information to be changed.
~6 :elpmaxe roF65
~ H  ! Change account	
~   6;)"DAEHREVO" ,1- ,TCABF$ ,esrap$( teSeliF$ llac65
~ H  ! Zero Read count of File
~ B 6;)0 ,777777%8 ,TNCBF$ ,"lcp.tset"( teSeliF$ llac65
~   $FileInfo_I and $FileInfo_S read the information that may be	
~   changed with $FileSet.
~  e 6ylno ro ,degnahc eb ton yam BDF eht fo sdleif lareveS65	
~  5 with certain capabilities.
~   6eht yb deifidom si taht BDF eht ni noitamrofni ehT65	
~  5 ARCF and SFTAD Jsys's is not currently changeable with
~  5 $FileSet. 
=6)diw ,sop ,lavi( ddlleeiiFFtteeGG$$65	
~   INTEGER - Returns the Wid bits found at bit positions Pos+1 to
6derots ,)tfel ot thgir morf 53..0 derebmun( lavi ni diW+soP65
~   right justified in an integer and filled with zeroes to the
6tfel eht snruter )81,81,lavi(dleifteG$ ,elpmaxe roF! .tfel65
~   half of ival. Ival, Pos and Wid are integers. See $SetField!
~  ~       25
~  1 for the reverse operation.
~  $$IInnppuuttTTaadd (string)	
~  1 INTEGER - Converts a string time and date into internal
~L6.daTtuptuO$ yb enod si esrevnoc ehT .tamrof65
~  $$IInntteeggeerr (string [,radix])	
~  1 INTEGER - Converts decimal number in string into an integer.
6eb ot xidar eht sevig )regetni( tnemugra dnoces lanoitpo nA65
~  1 used (2 to 10). Returns 0 on an error.
~ ` 6,stsixe liF yb deificeps elif eht fi 1 snruteR - REGETNI )lif( eelliiFFssII$$65	
~  1 otherwise returns 0.# Fil is specified as for $FileInfo:
~.6.eman elif eht ro ,rebmun lennahc a ro ,esraP$65
~  $$LLeennggtthh (string)	
~  1 INTEGER - Returns the length of string
Q6)etunim,ruoh,htnom fo yad,htnom,raey( ddaaTTeeggrreeMM$$65	
~  1 INTEGER - Returns the conversion to internal date and time
6,htnoM ,raeY sregetni evif eht yb desserpxe etad eht fo tamrof65
~  1 Day of month, Hour, Minutes.' The converse is done by
~  1 $ExpandTad.
~  $$NNeexxttDDiirreeccttoorryy INTEGER - Used to step to the next directory when parsing a	
6orez snruteR .no denrut dliW htiw yrotceriD ro tsiLyrotceriD65
~  1 at the end of the list, and nonzero otherwise. (see page 33).
6a gnisrap nehw elif txen eht ot pets ot desU - REGETNIG eelliiFFttxxeeNN$$65	
~  1 FileList or File with Wild turned on. Returns zero at the end
~6.esiwrehto oreznon dna ,tsil eht fo65
~  $$NNeexxttUUsseerrG INTEGER - Used to step to the next User when parsing a	
6eht ta orez snruteR .no denrut dliW htiw emaNresU ro tsiLresU65
~  1 end of the list, and nonzero otherwise. (see page 33).
~  $$OOppeenn (string, mode)	
~  1 INTEGER - Opens the file named in the string for I/O, in the
6ro ,tuptuO$ ,tupnI$ rehtie( edom regetni eht yb deificeps edom65
~  1 $Append). Returns the PCL channel number assigned, or zero if
~  1 the open could not be done.
~  [ 6dna 1tni sregetni eht fo RO esiwtib eht snruteR - REGETNI )2tni,1tni( rrOO$$65	
~  1 int2.
6)regetni( ddaaTTttuuppttuuOO$$65	
~  1 STRING - Convert internal date and time to string.# The
~  1 converse is done by $InputTad.
~  = 6no tupni rof denepo elif eht morf drocer a sdaeR - GNIRTS )lennahc( ddaaeeRR$$65	
~  1 Channel.
o 6)]tuoemit,[ gnirts ,xam( yyrraanniiBBddaaeeRR$$65	
~  1 STRING - Reads from the terminal, in binary, up to Max
6.daer si gnirtS ni deificeps retcarahc eht litnu ro sretcarahc65!
g 26
~   This will time out and return an empty string if nothing is	
6tuoemiT tnemugra regetni lanoitpo ehT .dnoces a nihtiw depyt65
~   can be used to provide the number of milliseconds to use for
6lortnoc gnidaer rof lufesu si sihT% .doirep tuoemit eht65
~   information transmitted by the VT100 terminal in response to
6rosruc dnes" dna "DI ledom lanimret dnes" sa hcus stseuqer65
~   position."
Q 6)]trats,[ 2gnirts ,1gnirts( hhccrraaeeSS$$65	
~   INTEGER - Searches the String1 for String2 and returns the
6tsrif eht fo retcarahc tsrif eht fo 1gnirtS ni noitisop65
~   occurence of String2. If not found, returns 0. The optional
6hcihw ta noitisop retcarahc eht sevig tratS tnemugra regetni65
~   the search starts.
Q 6)]regetni,[ 2gnirts ,1gnirts( ddeessiiaaRRhhccrraaeeSS$$65	
~   INTEGER - Same as $SEARCH except lower case alphabetics are
~   raised to upper case.
36)diw ,sop ,drow ,dleif( ddlleeiiFFtteeSS$$65	
~   INTEGER - Returns the integer Word with the rightmost Wid bits
6diw+soP ot 1+soP snoitisop tib eht ni derots dleiF fo65
~   (numbered 0..35 from right to left). For example: 
~\6)9,3,777777777777%8,321(DLEIFTES$ = I65	
~ H 
~ H returns 777777771237 (displayed in octal)
g $$SSttrriinngg (integer [,radix])	
~   STRING - Converts the integer into a string.% Radix is
6dettimo fI .)01 ot 2( desu eb ot xidar eht sevig tI .lanoitpo65
~   the integer is expressed in decimal. If the radix is other
~B6 :dengisnu sa tuptuo si rebmun eht ,01 naht65
~ H display $String(-1)G displays -1	
[ 6777777777777 syalpsid3 )8,1-(gnirtS$ yalpsid65
g $$WWaaiitt (integer) PROCEDURE - Waits the specified number of milliseconds, or	
~   forever if zero.
e6)drocer,lennahc( eettiirrWW$$65	
~   PROCEDURE - Writes the string Record into the output file
~   opened on Channel.
~  [ 6__________ettnneemmeeggaannaamm ______=yyrroommeemm __________e,,eeccaaffrreettnnII _____3ssyyssJJ$$ __oott ________Qcciiffiicceeppss __________esseerruuddeeccoorrPP ______=mmeettssyySS ____)..44..4465
~  A JSYS interface is provided in PCL extended. It gives facilities to
6noitces siht ni senituor ehT .skcolb tnemugra daer/tes ,sretsiger eht daer/tes65
g should be considered provisional; there will be changes for instance if
g vectors are implemented.
g $$GGeett__MMeemm (size) INTEGER - Acquires Size words from dynamic memory (actually	
6.drow tsrif eht fo sserdda eht snruter dna ,)ecaps gnirts LCP65!
~  ~       27
6dna tegS$ ,tupI$ ,tegI$ htiw yromem cimanyd gnicnerefer nehW65	
~  1 $Sput the first word has index zero)____, not one. The memory is
~  1 zeroed before you get it.
~86)ezis ,sserdda( mmeemm__tteeRR$$65	
~  1 PROCEDURE - Frees the memory at Address. Size should be the
6= sserdda" yb deriuqca saw yromem eht nehw nevig sa emas65
~  1 $get_mem (size)".
= 6)]]tnuoc,[ xedni,[ sserdda ,eulav( ttuuppII$$65	
~  1 PROCEDURE - Sets count words starting at Address+Index to the
6cimanyd ni sregetni erots ot desu si sihT .eulaV regetni65
~  1 memory acquired through $Get_Mem.# Index starts at 0 and
~6.1 ot stluafed tnuoC .0 ot stluafed65
~  $$IIggeett (address, [,index])	
~  1 INTEGER - Returns the value stored at Address+Index. Index is
~B6.0 ot stluafed dna ,esab orez htiw desserpxe65
~  $$SSppuutt (string, address [,index [,charpos]])	
~  [ 6retcarahc eht ta gnitrats gnirtS zicsa eht serotS - ERUDECORP65
~  1 in char position Charpos (counted from 0) in the word at
6ro ,soprahC fI .)orez ta strats xednI taht etoN( xednI+sserddA65
~  1 both Charpos and Index, are omitted, they default to zero.
~  $$SSggeett (address, [,index[,charpos]])	
~   . 6ni retcarahc eht ta gnitrats gnirts zicsa eht snruteR - GNIRTS65
~  1 position Charpos (counted from zero) in the word at
6era xednI dna soprahC htob ro ,soprahC fI .xednI+sserddA65
~  1 omitted, they default to zero.
~  = 6detaicossa yltnerruc si elif a dna 0 > si lennahC fI - REGETNI )lennahc( nnffJJ$$65	
~  1 with that channel ( see page 37), return the jfn associated
~  1 with it.
~  1 If Channel is < 0 return the Indexable File Handle associated	
6eht noitpo DLIW eht desu ESRAP eht fi :esrap tnerruc eht htiw65
~  1 flag bits are returned in the left half, and the jfn in the
~$6.denruter si NFJ eht ylno esiwrehto ,flah thgir65
~  $$JJssyyss (jsys [,ac1 [,ac2 [,ac3[,ac4]]]])	
~    6fo stnetnoc eht htiw sysJ rebmun sysj eht setucexE - REGETNI65
~  1 the registers defined by the optional arguments Ac1 through
6sseccus ehT .eruliaf rof 0 dna ,sseccus rof 1 snruteR .4cA65
~  1 indicator is also stored in the system variable $Jsysok.
6eht ni derots era 4 hguorht 1 sretsiger eht ,noitucexe retfA65
~  1 system variables $Ac1 through $ac4.
y6)]]]]4ca,[3ca,[ 2ca,[ 1ca,[ sysj( 11ssyyssJJ$$65	
~  1 PROCEDURE - Totally similar to $Jsys, except does not return a
~  1 value.
G6)gnirts( ccoollrrttSS$$65	
~  1 INTEGER - Returns the actual memory address of a string
6yam sihT .)elbairav gnirts a ro tnatsnoc gnirts a ei( yramirp65
~  1 not be used with string expressions or with strings returned!
g 28
~   by a system procedure: 
%6;yrotceriDdetcennoc$ = ridym65	
~ H i = $strloc (mydir);~ L ! Is Legal
~ H 
~ H i = $strloc ($ConnectedDirectory);= ! Is Wrong!
~  ~       29
~  ~  ` CCHHAAPPTTEERRG_______ 55_
 6_________[EECCAAFFRREETTNNII ____)RREESSUU6~65~ , 
~ , Parameters are often passed to commands from the terminal, just like normal
6gnisu gnisrap retemarap hcus yficeps ot resu eht swolla LCP .sdnammoc cexE65
~  the same monitor call as the Exec uses, so the user is able to write commands
~  which look like standard Exec commands.
~    6dna sretemarap eht lla esrap ot tsrif tseisae si ti ,sdnammoc gnitaerc nehW65
~  to store them in appropriate variables, then to parse the end of the line to
6snoitca eht mrofrep ot neht ylno dna ,dnammoc eht mrifnoc ot resu eht wolla65
~  which comprise the command. It is possible, using the COMND% JSYS, to make
6sa hcus( noitca elbisreverri emos od ,stnemugra wef a esrap hcihw smargorp65
~  deleting a file), and then parse a few more arguments; such programs upset
6ecnis ,sretemarap tsal esoht gniretne elihw U^ epyt ,ecnatsni rof ,ohw sresu65
~  the program has already deleted the file. PCL enforces and encourages the
6enil-fo-dnE demussa na gnimrofrep yb trap ni ,noitarepo fo edom elbarised erom65
~  Parse before performing major actions such as DoCommand.
~ V 6dna enil a sepyt resu eht erehw ,emit a ta enil a enod si gnisrap dnammoC65
~  the program parses it. This means that once a line has been confirmed with an
6,tnemetats esraP eht htiw desrap eb nac sdleif erom on ,esraP enil-fo-dnE65
~  since there is no command line to parse from. The Prompt statement can be
6egap no tpmorP ees ;desrap eb ot enil rehtona retne ot resu eht wolla ot desu65
~  82.
~ , If a PCL command contains none of the three forms of command parsing, it is
~6.esraP enil-fo-dnE na htiw ffo detrats ti fi sa tliub65
~ , The Complete description of the PARSE statement is given page 71.
~  55..11..)____ PPaarrssee3_____ FFoorrmmaattssG_______
~ , There are three ways to cause PCL to parse such parameters; in each case
6morf ti sesrap LCP dna ,detcepxe si retemarap fo epyt tahw seificeps resu eht65
~  the command line and delivers it to the PCL command.!
g 30
g 55..11..11.. SSiimmppllee PPAARRSSEE
~  The simple PARSE statement may be placed anywhere within the command. 
~ H COMMAND getarg;	
o6NIGEB65
~ H INTEGER repeat_count;
~ H  ...;
G 6;REBMUN ESRAP65
~ H repeat_count = $VALUE;
~ H  ...;
) 6;LOE ESRAP65
~ H  ...
6DNE65
g would parse for a number, store it in a variable for use, execute some more
6tnemetats ESRAP ehT .nruter egairrac a rof esrap neht dna ,stnemetats LCP65
g would store the value that the user entered in the system variable $VALUE.
g 55..11..22.. CCoommpplleexx PPAARRSSEE~  
~  The complex parse provides a way for one PARSE statement to parse for any
6hcum yrev skool ESRAP fo mrof siht fo xatnys ehT .sepyt esrap lareves fo eno65
g like the SELECT verb. 
6;XLPMC DNAMMOC65	
~ H BEGIN
6;... 65
~ H PARSE
 6NIGEB) 65
~ H ) NUMBER: BEGIN ... END;
6DNE ... NIGEB : LOE) 65
~ H ) END;
36... 65
~ H END
g This would allow the user to enter either a number or a carriage return; the
6gnidneped detucexe eb dluow )DNE - NIGEB ni desolcne( stnemetats gnidnopserroc65
g on which field type matched the user's input. In either case more information
g would be available from variables like $VALUE.
g 55..11..33.. CCoommmmaanndd AArrgguummeennttss
~  An easy way to specify the arguments is to use command arguments. These
6drowyek eht htiw tnemetats eht( noitaralced dnammoc eht ni deificeps eb tsum65
g COMMAND and the name of the command).# The user specifies the type of
615 egap ees( otni tluser eht erots ot elbairav eht dna desrap eb ot retemarap65
g for details). The variable must not___ be declared later; the use in the command
g arguments completely declares the variable. !
~  ~       31
~ l COMMAND AllAtOnce (NUMBER:count);	
~ l BEGIN
~   6yrassecen noitaralced REGETNI oN!65
~ l DISPLAY $STRING(count)
~ l END
/ 6_______GssnnooiittppOO _____3eessrraaPP ____)..22..5565
~ , In each of these 3 methods, the user may specify options to the parse type.
6.epyt esrap eht retfa yletaidemmi sesehtnerap ni desolcne era snoitpo esraP65
~  There are many options that the user can specify, e.g. the default value to
6resu eht fi epyt ot egassem pleh a ro retemarap siht spiks resu eht fi esu65
~  enters a question mark at the parameter. The parse options available vary
~  with the parse type. 
6ntpo DNAMMOC65	
~ l BEGIN
6;...65
~ l PARSE NUMBER (Help "Value of count", Default "2");
e6|~ j |G |Q 65
~ l Q |G ----> Parse3_____ optionsG_______ <----
~L6____)epyt _____3dleiF >--Q 65
~ l ...
6DNE65
~  If the user DECLARES this command and then types: 
~ l @optn ?
~   6 :dnopser lliw metsys eht ,tpmorp "@" eht ta65
~ l Value of count
~  as it would in any EXEC command. If the user skips the field by typing: 
~ l @optn<return>
~  at the "@" prompt or if the user uses ESCAPE to complete the command then the
~6.2 esac siht ni ,eulav tluafed eht nruter lliw ESRAP65
~  55..33..)____ PPaarrssee3_____ RReessuullttssG_______
~ , The results of each Parse are returned by PCL in several system variables:
6,depyt resu eht tahw .e.i( desrap motA eht yltcaxe snrutere motaX$65	
~  1 eventually completed by the user hitting the ESCape key). This
6,tsiLeliF sepyt dleif fo gnisrap eht rof tcerroc ton si dleif65
~  1 DirectoryList and Userlist.
~  [ 6dehcaer tniop eht ot pu dnammoc etelpmoc eht fo txet eht sdlohQ dnammoC$65	
~  1 in the current parse.!
g 32
g $Valuee returns an integer result if necessary, for example after	
~B6.)37 egap ees( drowyek a ro rebmun a gnisrap65
g $Atomo returns a string result if necessary, for example after	
~   parsing a token (see page 73).
g 55..44..)____ FFIILLEELLIISSTTQ________~  
~  One powerful extension to PARSE is the FILELIST option. This allows the
6yb detarapes eb ,sdrac dliw niatnoc yam hcihw seman elif rof esrap ot resu65
g commas, or both. The name of the first file which matches the specification
6,NeliF$ ,LeliF$ selbairav metsys eht ni denruter si deretne resu eht taht65
g $FileS, $FileV. Successive file names may be returned by using the $NEXTFILE
6sah selif fo tsil eht nehw orez snruter eliFtxeN$ :erudecorp ecivres metsys65
g been exhausted, and returns nonzero otherwise. 
~ H COMMAND ALLFILES;	
~6NIGEB65
~ H GUIDE "Files";
6;TSILELIF ESRAP65
~ H DO
~  6LELIF$ YALPSID 65
~ H  UNTIL $NEXTFILE EQL 0;
~ H END
a 6 :epyt yam resu ehT65
~ H @allfiles ABC.*,XYZ%Y.*,A.Z
~     6roF .denruter eb lliw *.CBA fo noitacificeps eht sehctam taht elif tsrif ehT65
g each call to $NEXTFILE the system will return file names that match the wild
6rof kool lliw ti ,txeN . detsuahxe neeb evah *.CBA hctam taht lla litnu sdrac65
g files that match XYZ%Y.*. Finally, it will return the file name A.Z.
Q 6a ni eb ylno yam ti dna dnammoc rep ecno deificeps eb ylno yam TSILELIF65
g simple parse.
~  Note that the same effect may be achieved by using the WILD option when
6noitacificeps eno ylno taht noitcirtser eht htiw ,epyt dleif ELIF a gnisrap65
g (containing wildcards) may be given. In the above example, "PARSE FILELIST"
g would be replaced by "PARSE (FILE (WILD))".!
~  ~       33
~  55..55..)____ DDIIRREECCTTOORRYYLLIISSTT,,~______________ UUSSEERRLLIISSTTQ________~ , 665
~ , DIRECTORYLIST and USERLIST are extensions allowing to parse lists of
6eht ni tupni dracdliw gnisu ,)seirotcerid nigol( sresU fo stsil fo seirotceriD65
~  way of FILELIST. The successive Directories or Users are returned in the
6denruter era sresu ro seirotcerid evisseccuS . RESU$ dna YROTCERID$ selbairav65
~  by using the $NEXTDIRECTORY or $NEXTUSER integer system procedures. When the
[6.oreznon nruter yeht esiwrehto ,0 nruter eseht detsuahxe neeb sah tsil65
~ l COMMAND ALLUSERS;	
~6NIGEB65
~ l 
~  6;TSILRESU ESRAP65
~ l 
 6OD65
~ l  DISPLAY $USER
Q 6;0 LQE RESUTXEN$ LITNU 65
~ l 
 6;DNE65
~ , The user might type in: 
~ 
 6*.cil2.ofni,*.cil1.ofni sresulla@65	
~ l 
 6ro65
~ l 
~ l @alldirectories <info.1lic.*>,<info.2lic.*>
~ z 6resu elihw ,)stekcarb elgna( ">...<" eht htiw nevig eb tsum seman yrotceriD65
~  names may not include them.
~ , Only one of either DirectoryList or UserList may be specified per command,
~  and it must be in a simple parse.
~   B 6noitpo dliw eht gnisu yb deveihca eb yam tceffe ralimis a taht osla etoN65
~  when parsing a field of type DIRECTORY or USERNAME. However, in this case,
~6:deretne eb yam sdracdliw htiw noitacificeps eno ylno65
~ l COMMAND ALLDIRECTORIES;	
~ l BEGIN
=665
~ l PARSE (DIRECTORY (WILD));
~ l DO
~ B 6;YROTCERID$ YALPSID 65
~ l  UNTIL $NEXTDIRECTORY EQL 0;
~ l END;!
g 34
g 55..66..)____ PPaarrssee3_____ eerrrroorr3_____ hhaannddlliinnggQ________~  
~  Errors found during parsing are handled differently depending on which type
6ot lebal a yficeps nac resu eht ,_________[stnemugra _______Gdnammoc nI .detucexe saw esrap fo65
g branch to by using the ERROR parse option. This is only available for command
6deretne resu eht fi lebal taht ta noitucexe nigeb lliw dnammoc ehT .stnemugra65
g something which was not legal for the specified parse type. 
a6)tnuoc : )munton RORRE(REBMUN( spoo DNAMMOC65	
~ H  ...;
 6:munton65
~ H  ...
~  In simple=______ parsingG_______, the command is terminated and the standard error message
6eht ,_______Ggnisrap _______Gxelpmoc nI .lanimret eht ta deyalpsid si epyt esrap taht rof65
g user may have an OTHERWISE parse option which will be executed if the parse
g fails. 
~  6;XLPMC DNAMMOC65	
~ H BEGIN
6... 65
~ H PARSE BEGIN
~ . 6;DNE ... NIGEB3 :REBMUN 65
~ H  EOL:Q BEGIN ... END;
e6NIGEB :ESIWREHTO 65
~ H = Display "Error in parameter";
~ H = Exit
6DNE= 65
~ H  END;
)6... 65
~ H END!
~  ~       35
~  ~  ` CCHHAAPPTTEERRG_______ 66_
[ 6_________[EECCAAFFRREETTNNII _______GDDNNAAMMMMOOCC ___DDNNAA _______GMMAARRGGOORRPP6~65
~  66..11..)____ RRuunnnniinnggG_______ PPrrooggrraammssQ________
~ , The INVOKE PCL statement runs a program much like the EXEC run___ command does
6fI .detrats sah margorp eht nehw etucexe ot seunitnoc dnammoc LCP ehT .won65
~  the PCL routine exits, the program is left in a ^C state. INVOKE takes a
6LCP NIEPYT ehT .nur ot margorp eht fo eman eht sniatnoc hcihw tnemugra gnirts65
~  statement "types" characters into the program. When a TYPEIN is executed, the
6tI .tiaw tupni lanimret otni seog margorp eht litnu tiaw lliw dnammoc LCP65
~  will then send the characters to the program and continue to execute PCL
6eht taht atad eht nruter ot desu si tnemetats TUOEPYTTEG ehT .stnemetats65
~  program would have typed on the terminal, placing it in the string that the
6ecnis ro EKOVNI eht ecnis sretcarahc lla teg lliw TUOEPYTTEG .seificeps resu65
~  the last GETTYPEOUT. The PASSOUTPUT option to the INVOKE statement causes all
6ehT# .lanimret gnillortnoc eht ot og ot margorp eht morf atad eht fo65
~  CLEARTYPEOUT command will throw away all the program type out that has
6detnawnu fo dir teg ot TUOEPYTTEG a fo ecalp ni desu eb yam sihT .detalumucca65
~  startup messages from programs. 
u6;gorp DNAMMOC65	
~ l BEGIN
y 6;atad_gorp GNIRTS 65
~ l  ...;
~  6;"exe.loryap" EKOVNI 65
~ l  CLEARTYPEOUT;
~  3 6ecivres metsys a si ETAD$= ;ETAD$ NIEPYT 65
~ l  GETTYPEOUT prog_data;
)6;atad_gorp YALPSID 65
~ l  ...
6DNE65
~  66..22..)____ EExxeeccuuttiinngg[_________ EEXXEECC)____ CCoommmmaannddssQ________
~ , The DOCOMMAND PCL statement takes a string argument and performs the EXEC
~  command that is in the string. 
a6;emohw DNAMMOC65	
~ l DOCOMMAND "systat " + $UserName;
~   6 :ees dluow resu eht tpmorp "@" eht ta _____3emohw gnipyt retfA65
~ l  Job Line Program User	
6A5SJ TATSYS 44 *03 65!
g 36
g at the terminal. The output from the command is displayed on the terminal
6morf tuo epyt eht esac siht nI .deificeps si retemarap OT lanoitpo eht sselnu65
g the command is placed in a string specified by the user: 
~6gnirts_cexe OT "lla tatsys" DNAMMOCOD65
~  To execute a command and ignore the output, do:
~ 6;LUN$ OT dnammoc DNAMMOCOD65!
~  ~       37
~  ~  ` CCHHAAPPTTEERRG_______ 77_
 6____________yTTUUPPTTUUOO//TTUUPPNNII6~65~ , 
~ , PCL provides simple file manipulation facilities. Up to 36 files may be
6setirw dna sdaer level drocer ylnO .edom dneppa ro ,tuptuo ,tupni ni denepo65
~  are possible. A record is terminated by a carriage return/line feed pair.
6eb ot si ti rehtehw dna elif eht fo eman eht sekat ecivres metsys NEPO$ ehT65
~  opened for input, output, or append access. $OPEN returns the PCL channel
6uoy dna tsixe ton seod elif eht fI .elif eht htiw detaicossa eb ot rebmun65
~  open it for Input, $open returns 0 for the channel number; otherwise the
~  channel is a positive integer. 
i 6)TUPNI$,"txt.liam"(NEPO$ = lennahc65
~ , The string procedure $READ takes a channel number as argument and returns
6tsrif eht sa rebmun lennahc a sekat ETIRW$ .elif eht ni drocer txen eht65
~  argument and a string as the second argument, and writes the string to the
~  file. 
~ l In_record = $READ(channel1);	
 6;)drocer_ni,2lennahc(ETIRW$ llaC65
~ , The user may test for end of file by calling the $EOF system procedure. If
6ti esiwrehto ,1- nruter lliw FOE$ neht ,elif fo dne eht sehcaer DAER$ a65
~  returns zero. $EOF takes the channel number of the file as an argument.
3 6rebmun lennahc eht sekat ESOLC$ .llac ESOLC$ eht htiw desolc eb yam seliF65
~  of the file to close. It may not be necessary to close files open for input,
y6.dnammoc LCP eht fo dne eht ta yllacitamotua desolc eb lliw yeht sa65!
g 38!
~  ~       39
~  ~  ` CCHHAAPPTTEERRG_______ 88_
6_________[EECCNNEERREEFFEERR6~65!
g 40
~   ? EEXXPPRREESSSSIIOONNSSo___________%
g 88..11..)____ EEXXPPRREESSSSIIOONNSSo___________~  
~  Expressions are the fundamental arithmetic, string, and logical entities of
g the PCL language.
Q 6ssnnooiisssseerrppxxee rreeggeettnnII ..11..11..8865
~  Integer expressions are composed of integer constants, integer variables,
6eht sah LCP .srotarepo citemhtira yb no detarepo ,sllac erudecorp regetni dna65
g usual operators for addition, subtraction, multiplication, and division, with
6eht ot dda ot sesehtnerap fo esu eht gniwolla dna ,selur ecnedecerp lausu eht65
g default precedence.
~ H count*(shift+1) + offset(commandstring)
g 88..11..22.. SSttrriinngg eexxpprreessssiioonnss
~  String expressions and likewise composed of string variables, string
6gnirts ehT .srotarepo yb no detarepo ,sllac erudecorp gnirts dna ,stnatsnoc65
g operators are concatenation (indicated by the "+" symbol) and substring
6sgnirts owt sekat noitanetacnoC .)stekcarb erauqs yb detacidni( noitcartxe65
g and generates a new string from them. Substring extraction looks like
~ H substring = str[start:count]
~    6si tnuoc dna ,tcartxe ot retcarahc tsrif eht fo noitacol eht si trats erehw65
g the number of characters to extract. An asterisk can be used for the count to
g extract to the end of the string.
Q6ssnnooiisssseerrppxxee llaacciiggooLL ..33..11..8865
~  Logical expressions are only used to control conditional statements; there
6depyt morf detareneg era snoisserpxe lacigoL# .selbairav lacigol on era65
g variables, constants, or procedure calls (either integer or string), compared
6ehT .">" dna ,"=>" ,"><" ,"=" ,"=<" ,"<"' :srotarepo lanoitaler htiw65
g relationals "lss", "leq", "eql", "neq", "geq" and "gtr" may be used
g alternatively.!
~  ~       41
~ l if my_dir eql $connectedDirectory	
~ l  ...
G 602 =< tnuoc fi65
~ l  ...!
g 42
~   D SSTTAATTEEMMEENNTTSSe__________%
g 88..22..)____ SSTTAATTEEMMEENNTTSSe__________~  
~  Statements are the fundamental execution entities of the PCL language.
6meht gnisolcne yb ,tnemetats dnuopmoc a mrof ot rehtegot depuorg eb yam yehT65
g in a BEGIN/END pair, and separating them by semicolons. Anywhere that the
6dnuopmoc a ,desu eb yam tnemetats a taht syas tnemetats a rof noitatnemucod65
g statement may be used just as well.
~ H IF i EQL 0	
G6NEHT65
~ H ) BEGIN
6;6=j) 65
~ H ) k=10
6DNE) 65
~ H ELSE
 60=j) 65
~  Braces may be substituted for BEGIN ... END:
~ H if i eql 0 then {	
[6nigeb) 65
~ H ) j=6;
601=k) 65
~ H ) }
6esle65
~ H ) j=0!
~  ~       43
~   m PPCCLL___ FFIILLEESS3_____%
~  88..33..)____ PPCCLL___ ffiilleess3_____~ , 
~ , A PCL file contains PCL declarations for commands, procedures and
6selif LCP .MYNONYS dna LANIGIROON ekil stnemetats LCP sa llew sa ,selbairav65
~  are compiled using the Exec DECLAREG_______ PCL-)____ROUTINESQ________ command.
~t6:si elif LCP a fo erutcurts ehT65
~ l declarationo___________ [;_ declarationo___________ ...___]	
~ l 
3 6:erehw65
~ l 
~  6:si noitaralced65
~ l Q command-declaration3 or
6ro noitaralced-erudecorpQ 65
~ l Q variable-declaration) or
6ro= dnammoc LANIGIROONQ 65
~ l Q SYNONYM command
~   H 6egap ,01.8 ni debircsed si tI .dnammoc LCP a seralced ___________onoitaralced _______Gdnammoc A65
~  51. Within a command declaration, we find declarations of local variables and
~  the code to execute the command.
~ , A procedure[_________ declarationo___________ declares a PCL procedure for use by other PCL
6a fo esoht ot ralimis era stnetnoc stI .)08 egap ees( serudecorp dna sdnammoc65
~  command.
~ , A variableQ________ declarationo___________ declares global=______ PCL variables, either integers or
6,serudecorp dna sdnammoc LCP lla ot elbaliava eb lliw selbairav esehT .sgnirts65
~  with the EXTERNAL declaration.
~   . 6.)96 egap ees( dnammoc cexE lanigiro na sevomer dnammoc __________eLANIGIROON ehT65
~ , The SYNONYMG_______ command declares a synonym to an existing command (see page
~  90).!
g 44
~   ] AABBOORRTT3_____%
g 88..44..)____ AABBOORRTT3_____~  
G 6________QnnooiittccnnuuFF65
~  The ABORT PCL statement will abort a PCL execution with an error message
g typed to the user.
e6______=ttaammrrooFF65
~ H ABORT3_____ string=______
~  NNootteess3_____
g  1. The string error message will be typed on the terminal, preceded by	
~ & "?".
6_______GeellppmmaaxxEE65
~ H COMMAND ohdear;	
e6NIGEB 65
~ H  ...;
~ H  IF $LENGTH(input_line) > 120 then ABORT "Line too long";
~ H  ...
6DNE65
~  RReellaatteeddG_______
} 685 egap - TIXE65	
~ H RETURN - page 84!
~  ~       45
~   h AASSSSIIGGNNMMEENNTTe__________%
~  88..55..)____ AASSSSIIGGNNMMEENNTTe__________~ , 
G 6________QnnooiittccnnuuFF65
~ , The assignment statement generates a value and deposits it in a variable.
~ , FFoorrmmaatt=______
~ l variable name = expression
~ , NNootteess3_____
~   1. The expression must be either integer or string, depending on the	
~ J type of the variable.
~ , EExxaammpplleeG_______
s 6;kool DNAMMOC65	
~ l BEGIN
6;...65
~ l target_user = $Atom;
~ l ...
6DNE65
~ , RReellaatteeddG_______
~ F 604 egap - snoisserpxE65!
g 46
~   ? BBEEGGIINN3_____ --_ EENNDD___%
g 88..66..)____ BBEEGGIINN3_____ --_ EENNDD___~  665
~  FFuunnccttiioonnQ________
~  BEGIN is paired with an END to group several PCL statements into one
g statement.
6______=ttaammrrooFF65
~ H BEGIN3_____	
o 6;tnemetats LCP 65
~ H  ...
6___DNE 65
~ H 
 6ro65
~ H 
~  6;tnemetats LCP _{65
~ H  ...
6_} 65
~  NNootteess3_____
g  1. Every BEGIN must have a corresponding END.
~ t 6.stnemetats LCP fo rebmun yna esolcne yam riap DNE/NIGEB A .2 65	
~ & Anywhere a PCL statement is called for, a BEGIN/END grouping may be
~ & substituted.
g  3. It is not necessary to have a semicolon following the final PCL	
6demrof si tnemetats llun a ,tneserp fI .DNE eht erofeb tnemetats65
~ & which will not affect the execution of the PCL command.
~B6.}...{ yb decalper eb yam dnE...nigeB .4 65
~  EExxaammpplleeG_______
~ H If $JOBNO > 6 then BEGIN	
~  [ 6;"6 naht retaerg rebmun boJ" yalpsiD6~>65
~ H ~ j A = 5;
Q 6;"ttocS" = eman6~>65
~ H ~ 8 END
~  RReellaatteeddG_______!
~  ~       47
~    	 CCAALLLL)____%
~  88..77..)____ CCAALLLL)____G665
~ , FFuunnccttiioonnQ________
~ , The CALL PCL statement will call a previously declared procedure.
~ , FFoorrmmaatt=______
~ l CALL)____ procedure[_________ [ (arguments)o___________ ]	
~ l 
y 6:si stnemugra65
~ l  parameter1e__________ [ ,parameter2...~______________ ]
~ l 
y 6:si retemarap65
~ l  integer-Q________expressione__________ or
=6__________enoisserpxe ______=gnirts 65
~ l 
6_____3sseettooNN65
~   1. CALL may call system procedures or user declared procedures.
= 6eht ni dedivorp eb tsum yeht stnemugra stcepxe erudecorp eht fI .2 65	
~ J call.
~   3. Note that typed procedures are not exactly referenced using the	
~ J same form without the call.
~    6yb detcepxe sa gnirts ro regetni rehtie ,snoisserpxe era stnemugrA .4 65	
~ J the called procedure. Those arguments which are to be modified by
~)6.selbairav elpmis eb tsum erudecorp eht65
~   5. Parameters are always passed by reference; all accesses made by the	
G6.selbairav s'rellac eht ot edam yllautca era erudecorp dellac65
~ , EExxaammpplleeG_______
} 6;ntr_a DNAMMOC65	
~ l  BEGIN
~ L 6;hctam ERUDECORP LANRETXE 65
~ l  EXTERNAL INTEGER PROCEDURE drop;
~ l  ...
~ ` 6neht 1 lqe )"cba"( pord FI 65
~ l 3 CALL match ("abc");
~ l  ...
6DNE 65
~ , RReellaatteeddG_______
~ ( 695 egap - LANRETXE65	
~ l PROCEDURE - page 80!
g 48
~   b CCAASSEE)____%
g 88..88..)____ CCAASSEE)____G665
~  FFuunnccttiioonnQ________
~  The CASE statement provides an orderly way of choosing one of several paths
6tnemetats ehT .noisserpxe regetni na fo eulav tnerruc eht no desab ekat ot65
g tagged with the current value is executed, and all others are ignored.
~  FFoorrmmaatt=______
~ H CASE)____ integer_expression~8__________________ FROM)____ low___ TO__ high)____ OF__ BEGIN3_____	
~ H  test)____ :_ PCL-)____statement[_________;
6;_________[tnemetats____)-LCP _: ____)tset 65
~ H  ...
6;___DNE 65
~ H 
~  6:era hgih ,wol65
~ H  integer constants
~ H 
G 6:si tset65
~ H  tag1)____ [ ,tag23_____ ...___ ]
~ H 
= 6:si gat65
~ H  constantQ________ or
~  6ro _________[2tnatsnoc __OT _________[1tnatsnoc 65
~ H  INRANGEG_______ or
36________QEGNARTUO 65
~  NNootteess3_____
g  1. The integer expression is tested against each test for a match	
6eht ,dnuof si hctam a nehW .ti ni desserpxe sgat eht fo yna tsniaga65
~ & statement corresponding to the test is executed. The FROM and TO
6tsehgih dna tsewol eht gninifed sregetni edecerp sdrowyek65
~ & permissible value of the expression. If the expression is outside
6tnemetats eht ,deificeps saw gat EGNARTUO na dna stimil eht65
~ & labelled by the OUTRANGE tag is executed. If the expression is
6na seussi LCP ,deificeps saw gat EGNARTUO on dna stimil eht edistuo65
~ & error.
g  2. After a sucessful match, and execution of the corresponding code,	
~ & execution proceeds after the CASE.
~  G 6eb ot si tnemetats deggat eht taht setacidni drowyek EGNARNI ehT .3 65	
~ & executed if the integer expression is within the range allowed, but
6tnatsnoc regetni rehto eht fo yna yb rof dedivorp ylticilpxe ton si65
~ & tags. The INRANGE tag must be the last in the list.
~  6ereht tub ,stimil OT-MORF eht nihtiw si noisserpxe regetni eht fI .4 65	
~ & is no statement tagged with that value, and there is no INRANGE
6eht htiw seunitnoc noitucexe dna enod si gnihton neht ,gat65
~ & statement following the CASE.
~  y 6era detset eb ot seulav eht nehw desu eb dluohs tnemetats ESAC ehT .5 65!
~  ~       49
=6dluohs tI .)01 dna 1 neewteb srebmun tsom ge( dekcap ylthgiht yrev65	
~ J never be used to test on a wide range like 1,2,100 (Use a Select
~ J Instead).
~   6. The CASE tests against integer constants. For testing agains values	
6sgnirts tsniaga ro dnammoc eht gnitucexe nehw ylno nwonk era taht65
~ J use SELECT or SELECTALL.
~ , EExxaammpplleeG_______
 6...65	
~ l CASE $Value FROM 1 to 7 OF BEGIN
 6eulav$ fi detucexe{ : 5 ,3 OT 1 65
~ l ~ V is between 1 and 3, or 5};
6;}9 ro 6 si eulav$ fi detucexe{ :G 9,6 65
~ l  INRANGE : {executed if $value is 4, 7, 8 or 10}
~ l  END;
K6_______GddeettaalleeRR65
~ l IF - page 63	
 658 egap - TCELES65
~ l SELECTALL - page 87!
g 50
~   : CCLLEEAARRTTYYPPEEOOUUTTy____________%
g 88..99..)____ CCLLEEAARRTTYYPPEEOOUUTTy____________~  
G 6________QnnooiittccnnuuFF65
~  The CLEARTYPEOUT PCL statement will discard the output typed out from an
g INVOKED program.
Q6______=ttaammrrooFF65
~ H CLEARTYPEOUTy____________
~  NNootteess3_____
g  1. The CLEARTYPEOUT PCL statement is useful for getting rid of	
~6.segassem putrats sa hcus margorp a morf txet detnawnu65
g  2. CLEARTYPEOUT is more efficient than doing a GETTYPEOUT and then not	
~ & using the returned data.
~  EExxaammpplleeG_______
~ H COMMAND runprog (text (help "program to run"):prog_to_run);	
~ H BEGIN
6...65
~ H INVOKE prog_to_run;
~ H ...
[ 6;TUOEPYTRAELC65
~ H ...
e 6;"keew" NIEPYT65
~ H ...
6DNE65
~  RReellaatteeddG_______
~ < 606 egap - TUOEPYTTEG65	
~ H INVOKE - page 66
) 676 egap - MARGORPLLIK65
~ H TYPEIN - page 91!
~  ~       51
~   w CCOOMMMMAANNDDG_______%
~  88..1100..3_____ CCOOMMMMAANNDDG_______~ , 
G 6________QnnooiittccnnuuFF65
~ , The COMMAND PCL statement keyword indicates the beginning of a command
~  definition.
6______=ttaammrrooFF65
~ l Format 1.	
~ l Q COMMANDG_______ name)____ [ (command-[_________arguments)e__________ ]
~j6;tnemetatS LCPQ 65
~ l 
Q 6.2 tamroF65
~ l Q COMMANDG_______ name)____ [ (command-[_________arguments)e__________ ]
~ l Q BEGIN3_____
e 6] ____________ysnoitaralced [Q 65
~ l Q PCL Statement;
6;tnemetatS LCPQ 65
~ l Q ...
[ 6tnemetatS LCPQ 65
~ l Q END___
y665
~ l command-arguments is:
~ ` 6;____)eman_________[-elbairav _: ] _________[)snoitpo( [ ____)epyt______=-dleif 65
~ l  ...;
~ l  field-=______type)____ [ (options)[_________ ] :_ variable-[_________name)____
~ l 
~ B 6:snoitpo ,epyt-dleif65
~ l  are defined as for PARSE (see page 73,
~ l  and page 76)
~ l 
~  6:si snoitaralced65
~ l  type)____ name1,name2,...;
Q 6selbairav lacoL gniralceDQ 65
~ l 
~ l  EXTERNALQ________ type)____ name1, name2,...;
~ 8 6.desu eb lliw taht selbairav labolG gniralceDQ 65
~ l  EXTERNALQ________ [ type)____ ] PROCEDURE[_________ name1, name2,...;
[ 6.dellac eb lliw taht serudecorp lanretxe gniralceDQ 65
~ l  ...
G665
~ l type is:
= 6ro REGETNI 65
~ l  STRING
s6_____3sseettooNN65
~   1. The COMMAND keyword must be the first word in a command definition.
6labolg ot secnerefer ,selbairav lacol eralced ot swolla 2 tamroF .2 65	
~ J variables, and references to other PCL procedures.
~ $ 6ciremunahpla yna niatnoc yam tI .eman dellac eb lliw dnammoc ehT .3 65!
g 52
~ & characters, including the underscore which will be converted to a	
y6.elbat dnammoc s'cexE eht otni deretne si ti nehw nehpyh65
g  4. The commands arguments are optional. If given, the parameters to	
6gnidiova ,enil noitaralced dnammoc eht no deificeps era dnammoc eht65
~ & the use of PARSE.! The command may not do any explicit PARSE
6.)28 egap ees( TPMORP htiw sdnammocbus sesu ti sselnu tnemetats65
~ & For each field parsed, the variable associated with the command is
6ro EULAV$ ot tes si dna GNIRTS ro REGETNI deralced yllacitamotua65
~ & $Atom, depending on the type of field parsed:
6HCTIWS ,REBMUN ,DROWYEK rof[ regetni65	
~ & stringe for INPUTFILE, OUTPUTFILE, FILE, FIELD, DIRECTORY,
6,GNIRTSDETOUQ ,EMITYAD ,TXET ,ECIVED ,EMANRESU65
~  I TOKEN, NODE.
~ & For example:
~ < 6;"rebmuN" ESION( YRT DNAMMOC65	
~ H ~  NUMBER (Default "10") : number);
~ H begin
~ 8 6;)rebmun(gnirts$ yalpsid65
~ H end;
g  5. More than one command declaration may appear in a source file.
~  EExxaammpplleeG_______
~ 
 6;enowen DNAMMOC65	
~ H ...
~ H COMMAND more (number:job_val;text:entry_type);
~ H ...
#6_______GddeettaalleeRR65
~ H PROCEDURE - page 80	
)628 egap - TPMORP65!
~  ~       53
~   w DDEECCLLAARREEG_______%
~  88..1111..3_____ DDEECCLLAARREEG_______~ , 
G 6________QnnooiittccnnuuFF65
~ , EXEC command to merge user written commands, procedures, or variables into
~  the EXEC.
6______=ttaammrrooFF65
~ l @DECLAREQ________ (for PCL) [ cfm___ ] option=______	
~ l 
= 6:si mfc65
~ l  /ConfirmQ________ or
)6__________emrifnoCoN/ 65
~ l 
[ 6:si noitpo65
~ l  ENVIRONMENTo___________ (from file) FileName1[_________ [ ,filename2e__________ ...___ ] or
~$6ro ____)eman________Q-regetni )deman( ________QELBAIRAV________Q-REGETNI 65
~ l  PCL-)____ROUTINESQ________ (from file) FileName1[_________ [ ,filename2e__________ ...___ ] or
~B6ro ____)eman_______G-gnirts )deman( ________QELBAIRAV_______G-GNIRTS 65
~ l  SYNONYMG_______ (to new name) new-)____name)____
~ $ 6____)eman________Q-dnammoc )deman dnammoc dlo ot(~  65
~ , NNootteess3_____
~   1. The DECLARE command will confirm its action with a message typed to	
6a no tluafed siht retla yam resu ehT% .lanimret s'resu eht65
~ J permanent basis with a SET DEFAULT command.# To override the
6ro mrifnoC eht yficeps yam resu eht sutats TES eht ro tluafed65
~ J NoConfirm switches.
~   2. To DECLARE PCL routines the source files are specified by a list of	
6yam noitacificeps hcae ,sammoc yb detarapes noitacificeps selif65
~ J contain wildcards. Each file specified is read, compiled into an
6yam elif ecruos ehT .CEXE eht ni derots dna ,tamrof lanretni65
~ J contain any combination of procedures, commands, and variable
6eht neht eman elif yna yficeps ton seod resu eht fI .snoitaralced65
~ J source input is read from the terminal. For procedures which will
6eht gnisu devas eb dluohs tnemnorivne CEXE eht ,netfo desu eb65
~ J ENVIRONMENT option of the Exec @PRESERVE command. This environment
6ehT .dnammoc TNEMNORIVNE ERALCED eht htiw dellacer eb neht yam65
~ J user may declare a command with the same name as a predefined
6neht dnammoc denifederp eht etucexe ot sehsiw resu eht fI .dnammoc65
~ J the ORIGINAL command should be used.
~  3 6denifed resu fo noitcelloc eritne eht si tnemnorivne LCP ehT .3 65	
~ J objects, which must have unique names. This includes commands and
6gnisu emit yna ta tnemnorivne LCP eht evas yam resu ehT .selbairav65
~ J the exec PRESERVE command. To re-establish a previous environment
6ehT/ .dnammoc ERALCED eht fo noitpo TNEMNORIVNE eht esu65
~ J environments to DECLARE are specified by a list of file
6ehT .sdrac dliw niatnoc yam noitacificeps hcae ,snoitacificeps65
~ J default file name is EXEC.ENV. The requested environments are
6selbairav dna sdnammoc lla os tnemnorivne gnitsixe eht otni degrem65!
g 54
~ & already declared will remain.
~  y 6ERALCED eht ot snoitpo ELBAIRAV-GNIRTS dna ELBAIRAV-REGETNI ehT .4 65	
~ & command will create variables in the EXEC which may be referenced
6msinahcem a sedivorp sihT .serudecorp ro sdnammoc nettirw resu yb65
~ & for one command to pass data to another command or for one global
6eb yam selbairav esehT .ecnerefer yam sdnammoc ynam taht eulav65
~ & assigned values by using the SET (see page 89) command if at the
6.dnammoc a ni fi tnemetats tnemngissa elpmis a yb ro level CEXE65
~ & The user may view the current value of these global variables by
~ & using the INFORMATION VARIABLE command.
~   6dnammoc gnitsixe na ot eman mynonys a seralced noitpo MYNONYS ehT .5 65	
~ & (Exec or PCL) .
~  EExxaammpplleeG_______
~ H @DECLARE PCL-ROUTINE new-commands.pcl	
~$6]denifed IGIG dnammoC[65
~ H [Command GAPL defined]
6]denifed EPYTG dnammoC[65
~ H [Command SAVE defined, old definition replaced]
~ H [Command GCOLOR defined]
G 6egassem ELBAIRAV-GNIRTS ERALCED@65
~  RReellaatteeddG_______
~ H INFORMATION - page 64	
)607 egap - LANIGIRO65
~ H SAVE - page 79
698 egap - TES65
~ H UNDECLARE - page 92!
~  ~       55
~   w DDIISSPPLLAAYYG_______%
~  88..1122..3_____ DDIISSPPLLAAYYG_______~ , 
G 6________QnnooiittccnnuuFF65
~ , The DISPLAY PCL statement will type its argument on the terminal.
~ , FFoorrmmaatt=______
~ l DISPLAYG_______ [ option=______ ] expressione__________	
~ l 
[ 6:si noitpo65
~ l ) NORETURNQ________ or
Q6______=YRANIB) 65
~ l 
~  6:si noisserpxe65
~ l ) an integer or string expression
~ , NNootteess3_____
~   1. By default, DISPLAY will type out the string or number in ordinary	
~t6.dedda nruter egairrac a htiw edom retcarahc65
~   2. The NORETURN option will not type out the carriage return.
Q 6retcarahc yna tuohtiw yalpsid ot desu si noitpo YRANIB ehT .3 65	
~ J conversion. This is useful for controlling display or graphics
Q6.gnirts eht ot nruter egairrac a dda ton lliw tI .slanimret65
~   4. To concatenate strings and numbers in DISPLAY use the $String	
~ J procedure: 
~ l DISPLAY "Terminal length : " + $STRING($termlength);
~ , EExxaammpplleeG_______
~  6;ffowohs DNAMMOC65	
~ l BEGIN
Q 6;sutats GNIRTS65
~ l INTEGER value;
o6;...65
~ l DISPLAY "starting";
~ l ...;
~ t 6;sutats + " : sutatS" YALPSID65
~ l ...
~  6;73 * eulav YALPSID65
~ l ...;
~ . 6;"J$H$" YRANIB YALPSID65
~ l ...
6DNE65!
g 56
~   l DDOO__%
g 88..1133..3_____ DDOO__=665
~  FFuunnccttiioonnQ________
~  The DO PCL statement provides loop control within PCL commands.
~  FFoorrmmaatt=______
U 6.1 tamroF65	
~ H Q DO__ PCL___ statement[_________ WHILE3_____ logicalG_______ expressione__________
~ H Format 2.
~ H Q DO__ PCL___ statement[_________ UNTIL3_____ logicalG_______ expressione__________
~  NNootteess3_____
g  1. PCL statement may be any legal PCL statement or a BEGIN/END	
~ & grouping of PCL statements.
~    6.eurt si noisserpxe lacigol eht sa gnol sa pool lliw 1 tamroF .2 65	
~ & Presumably some statement in the PCL statement will alter something
6OD eht esiwrehtO .noisserpxe lacigol eht ni detset gnieb si taht65
~ & may loop forever. There is no ENDLOOP or ESCAPE command. The user
G6.dednemmocer ton si siht tub pool eht fo tuo OTOG ot hsiw yam65
g  3. Format 2 will loop as long as the logical expression is false.	
~V6.setanimret pool eht eurt semoceb tset eht ecnO65
g  4. Both formats will execute at least once. The logical expressions	
6.detucexe neeb evah stnemetats LCP eht retfa litnu dekcehc ton era65
~  EExxaammpplleeG_______
~  6;elihWoD dnammoc65	
~ H begin integer i;
o6;5 = i65
~ H DO begin display $string(i);i = i - 1 end WHILE i > 0;
~ H end
)665
~ H  Execution:
~ H 
G 6elihWoD@65
~ H 5
6465
~ H 3
6265
~ H 1
6_______GddeettaalleeRR65
~ H WHILE - page 94	
639 egap - LITNU65!
~  ~       57
~   m DDOOCCOOMMMMAANNDD[_________%
~  88..1144..3_____ DDOOCCOOMMMMAANNDD[_________~ , 
G 6________QnnooiittccnnuuFF65
~ , The DOCOMMAND PCL statement passes commands to the EXEC.
~ , FFoorrmmaatt=______
~ l DOCOMMAND[_________ [ ORIGINALQ________ ] string1G_______ [ TO__ string2G_______ ]
~ , NNootteess3_____
~   1. The optional keyword ORIGINAL causes the DOCOMMAND to execute the	
6deralced s'resu eht ton dna dnammoc a fo noitinifed lanigiro s'CEXE65
~ J command.
~   2. Normally, Docommand types the results of the command on the	
~ J terminal.
~   3. If the optional TO string2 is specified docommand places the	
6sa dettamrof eb lliw tuptuo ehT .2gnirtS ni dnammoc eht fo stluser65
~ J if the Exec were typing to a terminal with a width of zero, since
~)6.smargorp yb desrap ylisae tsom si siht65
~   4. A carriage return will be added to the end of the string containing	
~ J the command.
~   5. The DoCommand statement can be abbreviated DCM .
~ 8 6tseb ehT .ssergorp ni yltnerruc ESRAP yna setanimret dnammocoD A .6 65	
~ J rule is not to use any Docommand before a PARSE EOL has been
~ J executed.
=6_______GeellppmmaaxxEE65
~ l COMMAND bigeez;	
6,ridv" DNAMMOCOD65
~ l o larger 100
~ l 
o 6"o 65!
g 58
~   b EEXXIITT)____%
g 88..1155..3_____ EEXXIITT)____~  
G 6________QnnooiittccnnuuFF65
~  The EXIT PCL statement will cause the PCL command to return to the EXEC.
~  FFoorrmmaatt=______
~  6] ______=noitpo [ ____)TIXE65	
~ H 
[ 6:si noitpo65
~ H ) SAVE)____ or
6_________[MARGORPOT) 65
~  NNootteess3_____
g  1. EXIT will always go back to the EXEC even if executed within a	
~ & procedure.
g  2. If the PCL command executes to the END of the command, an EXIT will	
~ & be simulated.
g  3. It is permissible to have more than one exit in a PCL command or	
~ & procedure.
g  4. When a PCL command exits, any invoked programs are killed during	
6morf margorp dekovni eht tneverp lliw noitpo EVAS ehT .punaelc eht65
~ & being killed, and leaves it as if a ^C had been typed.
y 6dna yllatot detixe saw dnammoc eht fi sa stca noitpo MARGORPOT ehT .5 65	
~ & a @continue was typed to the Exec for the invoked program.
~  EExxaammpplleeG_______
~ 2 6;eulavkcehc DNAMMOC65	
~ H BEGIN
[ 6;tnuoc REGETNI 65
~ H  ...;
~ 8 6;TIXE NEHT 6 > tnuoc FI 65
~ H  ...;
6TIXE 65
~ H END
#6_______GddeettaalleeRR65
~ H ABORT - page 44	
648 egap - NRUTER65
~ H INVOKE - page 66!
~  ~       59
~   r EEXXTTEERRNNAALLQ________%
~  88..1166..3_____ EEXXTTEERRNNAALLQ________~ , 
G 6________QnnooiittccnnuuFF65
~ , The EXTERNAL PCL statement allows commands to use externally defined
~  procedures and global variables.
~ , FFoorrmmaatt=______
~ l EXTERNALQ________ type)____ name13_____ [ ,name2=______ ...___ ] or	
~ l 
~ l EXTERNALQ________ [ type)____ ] PROCEDURE[_________ name13_____ [ ,name2=______ ...___ ]
~ l 
G 6:si epyt65
~ l  INTEGERG_______ or
G6______=GNIRTS 65
~ , NNootteess3_____
~   1. The "EXTERNAL type name" form allows a PCL command or procedure to	
6LCP a ni GNIRTS ro REGETNI yb denifed( selbairav labolg ecnerefer65
~ J source file, or by the Exec @Declare command).
~ L 6ro dnammoc LCP a swolla mrof "eman ERUDECORP ]epyt[ LANRETXE" ehT .2 65	
~ J procedure to reference externally defined procedures (typed or
6decnerefer si erudecorp eht deificeps ton si epyt eht fI .)depytnu65
~ J by "CALL name", otherwise its name may be used as a variable name.
~ , EExxaammpplleeG_______
~  6;edistuo DNAMMOC65	
~ l BEGIN
G 6;tni REGETNI 65
~ l  EXTERNAL STRING message;
[ 6;regnif ERUDECORP REGETNI LANRETXE 65
~ l  EXTERNAL PROCEDURE mark;
~ l  ...
y 6;egassem yalpsid 65
~ l  int = finger;
)6;kram llac 65
~ l  ...
6DNE65
~ , RReellaatteeddG_______
} 674 egap - LLAC65	
~ l DECLARE - page 53
 608 egap - ERUDECORP65!
g 60
~   D GGEETTTTYYPPEEOOUUTTe__________%
g 88..1177..3_____ GGEETTTTYYPPEEOOUUTTe__________~  
G 6________QnnooiittccnnuuFF65
~  The PCL statement GETTYPEOUT will place the terminal output from an invoked
g program into a string.
~  FFoorrmmaatt=______
~ ( 6______=gnirts __________eTUOEPYTTEG65
~  NNootteess3_____
g  1. When a GETTYPEOUT statement is executed, PCL will gather all	
6ecnis ro EKOVNI eht ecnis margorp dekovni eht morf tuptuo lanimret65
~ & the last GETTYPEOUT and put it in the string. When the invoked
6nruter lliw TUOEPYTTEG eht ,tiaw tupni lanimret otni seog margorp65
~ & with the type out in the string.
~  [ 6a gniod taht tneiciffe erom si tnemetats LCP TUOEPYTRAELC A .2 65	
~ & GETTYPEOUT and then not using the returned data.
~  EExxaammpplleeG_______
~ H COMMAND runprog (text (help "program to run"):prog_to_run);	
~ H BEGIN
~  6;txet_margorp GNIRTS65
~ H ...;
~  6;nur_ot_gorp EKOVNI65
~ H ...;
~ B 6;txet_margorp TUOEPYTTEG65
~ H ...
6DNE65
~  RReellaatteeddG_______
~  666 egap - EKOVNI65	
~ H TYPEIN - page 91
3 605 egap - TUOEPYTRAELC65
~ H KILLPROGRAM - page 67!
~  ~       61
~    	 GGOOTTOO)____%
~  88..1188..3_____ GGOOTTOO)____Q665
~ , FFuunnccttiioonnQ________
~ , The GOTO statement alters the flow of execution of PCL.# It causes
6esu stI .)7 egap ees( tnemetats delebal a ot yltcerid pmuj ot noitucexe65
~  should be minimized because of the great possibility of confusion, but at
~  times it may be essential.
~ , FFoorrmmaatt=______
_ 6_____3lebal ____)OTOG65
~ , NNootteess3_____
~   1. The label must be defined somewhere in the command or procedure.
~ , EExxaammpplleeG_______
s 6;refx DNAMMOC65	
~ l  BEGIN
6;... 65
~ l  loop1:
6;... 65
~ l  GOTO loop1;
[6... 65
~ l END
#6_______GddeettaalleeRR65
~ l PCL Labels - see page 7!
g 62
~   ] GGUUIIDDEE3_____%
g 88..1199..3_____ GGUUIIDDEE3_____~  
G 6________QnnooiittccnnuuFF65
~  The GUIDE statement can be used in conjunction with the PARSE statement to
6ralucitrap a taht metsys eht sllet tI .ecafretni resu gnisaelp a edivorp65
g guide word is to be displayed if the user requests it by hitting the Escape
g key. It is equivalent to PARSE NOISE.
~  FFoorrmmaatt=______
~ H GUIDE3_____ string-G_______constantQ________
~  NNootteess3_____
g  1. The GUIDE statement has the same restrictions as the PARSE	
6gnieb si enil dnammoc a erehw tpecxe desu eb ton nac tI :tnemetats65
~ & parsed.
g  2. The GUIDE statement is actually a PARSE statement with the NOISE	
~ & field-type.
Q6_______GeellppmmaaxxEE65
~ H GUIDE "Input File";	
6;)TUPNI( ELIF ESRAP65
~  RReellaatteeddG_______
~ 
 617 egap - ESRAP65!
~  ~       63
~   c IIFF__ ......___ EELLSSEE)____%
~  88..2200..3_____ IIFF__ ......___ EELLSSEE)____~ , 665
~ , FFuunnccttiioonnQ________
~ , IF ... ELSE provides the conditional execution of PCL statements depending
~  on testing integer or string expressions.
~ , FFoorrmmaatt=______
~ l IF__ logical-expression~8__________________ THEN)____	
e6_________[tnemetats____)-LCP) 65
~ l [ ELSE)____
y 6] _________[tnemetats____)-LCP) 65
~ , NNootteess3_____
~   1. If the expression is true then the statement after THEN is	
~.6.detucexe si tnemetats ESLE eht esiwrehto ;detucexe65
~   2. The ELSE part is optional. If omitted it corresponds to a Null ELSE	
~L6.)detucexe si gnihton neht sliaf tset eht fi ei(65
~   3. IF ... ELSE may be cascaded (although CASE or SELECT might be more	
~)6.)yhtgnel si edacsac eht fi etairporppa65
~ , EExxaammpplleeG_______
~ l IF $value < 10 then display "less than 10"	
~ V 6"001 naht ssel tub 9 naht erom" yalpsid neht 001< eulav$ FI ESLE65
~ l ELSE display "More than 99";
~ , RReellaatteeddG_______
} 684 egap - ESAC65	
~ l SELECT - page 85
 678 egap - LLATCELES65!
g 64
~   ? IINNFFOORRMMAATTIIOONNo___________%
g 88..2211..3_____ IINNFFOORRMMAATTIIOONNo___________~  
G 6________QnnooiittccnnuuFF65
~  New options to the EXEC INFORMATION command give information about the
g current PCL environment. 
~  FFoorrmmaatt=______
~ H INFORMATIONo___________ (About) DEFAULTSQ________ (For) DECLAREG_______	
y6_______GSTCEJBO____)-LCP )tuobA( ___________oNOITAMROFNI65
~ H INFORMATIONo___________ (About) VARIABLEQ________ string=______
~  NNootteess3_____
g  1. The DEFAULTS DECLARE option lists the defaults for the DECLARE	
6yb detsil osla era dnammoc ERALCED eht rof stluafed ehT .dnammoc65
~ & INFORMATION DEFAULTS ALL.
g  2. The PCL-OBJECTS option lists the names of all the commands,	
6s'resu eht ni deralced yltnerruc era taht selbairav dna ,serudecorp65
~ & EXEC.# This provides a way for the user to see exactly what
6tuoba noisufnoc yna diova dna dehsilbatse neeb evah sdnammoc65
~ & redefined commands.
g  3. The VARIABLE option will display the current value of a string or	
6ELBAIRAV-GNIRTS ERALCED eht yb deralced saw hcihw elbairav regetni65
~ & or the DECLARE INTEGER-VARIABLE commands.  It does not display
Q6.serudecorp ro sdnammoc edisni deralced selbairav rof seulav65
~  EExxaammpplleeG_______
~ H @INFORMATION (ABOUT) PCL	
~  G 6REIRUOC ,ENILPULAID ,KCEHCLIAMTEN ,DNIMER ,PRD :sdnammoC 65
~ H  Procedures: MATCH
G 6EGASSEM gnirtS :selbairaV 65
~ H @
~ H @set string message (TO) grades are due today
~ H @info var message
 6yadot eud era sedarg 65
~  RReellaatteeddG_______
~  635 egap - ERALCED65	
~ H SET - page 89
3 629 egap - ERALCEDNU65!
~  ~       65
~   J IINNTTEEGGEERRG_______ --_ SSTTRRIINNGG=______%
~  88..2222..3_____ IINNTTEEGGEERRG_______ --_ SSTTRRIINNGG=______~ , 
G 6________QnnooiittccnnuuFF65
~ , The INTEGER (STRING) statement declares variables to be of type integer
6eht ot lacol elbairav a sa ti senifed ti dnammoc a edisni fI .)gnirtS(65
~  procedure; otherwise it defines a global variable.
~ , FFoorrmmaatt=______
~ l INTEGERG_______ var1)____ [ ,_ var2...G_______ ] or	
36] _______G...2rav _, [ ____)1rav ______=GNIRTS65
~ , NNootteess3_____
~   1. In PCL every variable must be declared by a type statement.
G 6ti erudecorp ro dnammoc a ni decnerefer si elbairav labolg a fI .2 65	
~ J must be declared with an EXTERNAL statement.
~ , EExxaammpplleeG_______
~ l INTEGER today,tomorrow;[ ! dates in internal format	
Q6yrotcerid tnerruc !~ B ;ridym GNIRTS65
~ , RReellaatteeddG_______
~ ( 695 egap - LANRETXE65!
g 66
~   X IINNVVOOKKEE=______%
g 88..2233..3_____ IINNVVOOKKEE=______~  
G 6________QnnooiittccnnuuFF65
~  The PCL statement INVOKE will start a program running in a lower fork.
6si ti ;O/I lanimret fo mrof elpmis a ylno htiw margorp eht sedivorp sihT65
g possible to make programs which expect more advanced terminal control than PCL
g can provide.
)6______=ttaammrrooFF65
~ H INVOKE=______ [PASSOUTPUTe__________] string=______
~  NNootteess3_____
g  1. INVOKE should be used when the user wishes to control the type in	
~ & and type out of the invoked program.
~  3 6rehtie ot margorp eht rof stiaw ti ,margorp eht strats LCP retfA .2 65	
~ & halt or wait for terminal input.
~  [ 6dekovni eht ,setelpmoc margorp eht erofeb stixe dnammoc LCP eht fI .3 65	
~ & program will be left in a ^C state.
~  = 6.dnammoc NIEPYT eht gnisu margorp dekovni eht ot tnes eb yam ataD .4 65	
~ & Type out from the program may be retrieved with the GETTYPEOUT
~ & command.
g  5. If the PASSOUTPUT option is used all output from the program is	
6a od ot deen eht setanimile sihT .lanimret eht ot yltcerid tnes65
~ & GETTYPEOUT and a DISPLAY.
~ L 6.OSAP detaiverbba eb nac noitpo TUPTUOSSAP ehT .6 65
~  EExxaammpplleeG_______
~ H COMMAND runprog (text (help "program to run"):prog_to_run);	
~ H BEGIN
6;...65
~ H INVOKE prog_to_run;
~ H ...
6DNE65
~  RReellaatteeddG_______
~ < 606 egap - TUOEPYTTEG65	
~ H CLEARTYPEOUT - page 50
G619 egap - NIEPYT65
~ H KILLPROGRAM - page 67!
~  ~       67
~   c KKIILLLLPPRROOGGRRAAMMo___________%
~  88..2244..3_____ KKIILLLLPPRROOGGRRAAMMo___________~ , 
G 6________QnnooiittccnnuuFF65
~ , The KILLPROGRAM PCL statement will terminate an invoked program.
~ , FFoorrmmaatt=______
i 6___________oMARGORPLLIK65
~ , NNootteess3_____
~   1. KILLPROGRAM will ^C the invoked program and then do a RESET on the	
~ J fork.
6_______GeellppmmaaxxEE65
~ l COMMAND runprog (text (help "program to run"):prog_to_run);	
~ l BEGIN
~  6;txet_margorp GNIRTS65
~ l ...;
~  6;nur_ot_gorp EKOVNI65
~ l ...;
~ B 6;txet_margorp TUOEPYTTEG65
~ l ...;
G 6;MARGORPLLIK65
~ l ...
6DNE65
~ , RReellaatteeddG_______
~  666 egap - EKOVNI65	
~ l GETTYPEOUT - page 60
3619 egap - NIEPYT65
~ l CLEARTYPEOUT - page 50!
g 68
~   g NNOOPP___%
g 88..2255..3_____ NNOOPP___G665
~  FFuunnccttiioonnQ________
~  The NOP statement performs exactly Nothing.
~  FFoorrmmaatt=______
 6___PON65
~  NNootteess3_____
g  1. NOP may be used to clarify the intent of a procedure. 
~  EExxaammpplleeG_______
~ H CASE $value FROM 1 TO 6 OF BEGIN	
Q6;}edoc emos{ : 3 OT 1 65
~ H  4G : NOP;~  !If 4, do exactly nothing
~ H  INRANGE : {code if 5 or 6};
~ H  END;
K6_______GddeettaalleeRR65!
~  ~       69
~   h NNOOOORRIIGGIINNAALLe__________%
~  88..2266..3_____ NNOOOORRIIGGIINNAALLe__________~ , 
G 6________QnnooiittccnnuuFF65
~ , The NOORIGINAL PCL statement undeclares an original exec command.
~ , FFoorrmmaatt=______
~ l NOORIGINALe__________ command-Q________name)____
~ , NNootteess3_____
~   1. This command is placed in PCL source files, but may not be used	
6cexE eht ot tnelaviuqe si esu stI .erudecorp ro dnammoc a edisni65
~ J "@UNDECLARE ORIGINAL-COMMAND" command.
~   6eht gniyreuq nehw raeppa ton seod deralcednu suht dnammoc ehT .2 65	
~ J available commands with "?" but it may still be invoked with the
~)6.)07 egap ees( dnammoc cexE "LANIGIRO@"65
~ , EExxaammpplleeG_______
~ 2 6;EVIHCRA LANIGIROON65
~ , RReellaatteeddG_______
~ 2 629 egap - ERALCEDNU65!
g 70
~   N OORRIIGGIINNAALLQ________%
g 88..2277..3_____ OORRIIGGIINNAALLQ________~  
G 6________QnnooiittccnnuuFF65
~  The Exec @Original command allows to run an original command even if PCL
6yb deralcednu neeb sah ti fi ro ,eman emas eht yb dnammoc rehto na denifed sah65
g the Exec "@UNDECLARE ORIGINAL-COMMAND" command or by the PCL "NOORIGINAL"
g declaration.
)6______=ttaammrrooFF65
~ H @ORIGINAL[_________ (Exec Command) command-namey____________ command-Q________arguments[_________
~  EExxaammpplleeG_______
~ H @ORIGINAL Systat Debar
~  RReellaatteeddG_______
~  635 egap - ERALCED65	
~ H NOORIGINAL - page 69
629 egap - ERALCEDNU65!
~  ~       71
~     PPAARRSSEE3_____%
~  88..2288..3_____ PPAARRSSEE3_____[665
~ , FFuunnccttiioonnQ________
~ , The PARSE PCL statement is used to read command input parameters from the
6ro srebmun sa hcus detseuqer eb yam sretemarap fo sepyt cificepS .lanimret65
~  input file specifications. Refer to the parse introduction page 29 for an
~  introduction to the working of PARSE.
~ , FFoorrmmaatt=______
U 6.1 tamroF65	
~ l = PARSE3_____ field-=______type)____ [ (field-option;~______________ ...___ )_ ]
~ l 
Q 6.2 tamroF65
~ l = PARSE3_____
 6_____3NIGEB[ 65
~ l [ field-=______type)____ [ (field-option;~______________ ...___ )_ ] [ :_ PCL___ statement[_________ ]
6] _________[tnemetats ___LCP _: [ ] _) ___... ______________~;noitpo-dleif( [ ____)epyt______=-dleif[ 65
~ l [ . . .
6___DNE[ 65
~ l 
~  6:si epyt-dleif65
~ l  the type of atom parsed, cfr infra
~ l 
~  6:si noitpo-dleif65
~ l  options modifying the parse, cfr infra
~ l 
~ l Format 1 is called a simple parse. Format 2 is a complex parse,
e6.sepyt dleif elbissop lareves fo eno esrap ot gniwolla65
~ , EExxaammpplleeG_______!
g 72
~ H COMMAND getinfo;	
y6NIGEB65
~ H STRING type_in;
36;txet ESRAP65
~ H type_in = $ATOM;
~ 8 6;ni_epyt + " >>deretne uoY" YALPSID65
~ H PARSE EOL;
Q6...65
~ H END
)665
~ H COMMAND choice;
o6NIGEB65
~ H STRING a_user; INTEGER the_job;
~ H PARSE BEGIN
 6: emanresu 65
~ H = BEGIN
[ 6;MOTA$ = resu_a= 65
~ H = DOCOMMAND "systat " + a_user
~ H = END;
 6: rebmun 65
~ H = BEGIN
o 6;EULAV$ = boj_eht= 65
~ H = DOCOMMAND "systat " + $string(the_job)
~ H = END
)6DNE 65
~ H  ;
6...65
~ H END
~  To the user, the above command choice would look like: 
~ H @decl pcl choice	
G 6]denifed ECIOHC dnammoC[65
~ H @
~ . 6eman resu ? eciohc@65
~ H  or decimal number
Q640et eciohc@65
~ H  14) 42 EMACS TE04
~601 eciohc@65
~ H  10) 13 OPR3 IO00
~ H @
~  The following command defines a keyword to be parsed. 
~ H COMMAND keywd;	
e6NIGEB65
~ H  ...;
~ H  PARSE KEYWORD ( WORDS("day":1, "week":2, "year":3) );
~ H  ...
6DNE65
~  To the user, the keywd command would look like: 
~6:gniwollof eht fo eno ? dwyek@65	
~ H  DAY) WEEK) YEAR
o6yad dwyek@65!
~  ~       73
~ , NNootteess3_____
~   1. The parse field types are a subset of the COMND JSYS Function codes	
6fo noitpircsed etelpmoc a roF .desrap eb ot dleif detcepxe eht rof65
~ J the actions of these fields, see their corresponding description in
6detsil era sepyt dleif lagel ehT .launam SLLAC ROTINOM 02-SPOT eht65
~ J page 73.
~   2. The last atom typed by the user is returned in $xatom (except for	
6ot pu dnammoc etelpmoc ehT .)tsiLresU dna tsiLyrotceriD ,tsiLeliF65
~ J the last atom parsed is in $command.
~  3 6HCTIWS ro DROWYEK a ni tnatsnoc-regetni eht ,REBMUN rof seulav ehT .3 65	
~ J (see below), and the internal date and time for DAYTIME are
~ J returned in $VALUE=______.
~   4. The value for file parses is returned in system variables $Parse=______	
6.)91 egap ees( ______=VeliF$ ___dna ______=SeliF$ _______G,LeliF$ _______G,nelif$ dna ,)71 egap ees(65
~   5. The text typed in for NUMBER, FIELD, DEVICE, TEXT, TOKEN,	
6si EDON dna ,HCTIWS ,DROWYEK ,EMANRESU ,YROTCERID ,GNIRTSDETOUQ65
~ J returned in $ATOM3_____.
~   6. Each Field type may have optional Field Options enclosed in	
6dnetxe ro yfidom snoitpo esehT .sammoc yb detarapes dna sesehtnerap65
~ J the parse type of the field; they are closely Related to the COMAND
~6.67 egap debircsed era snoitpo dleif esrap ehT .SYSJ65
~   7. PARSE takes care of re-parsing and redisplay if the user corrects	
6hguoht sa dnammoc eht edoc dluohs rohtua LCP ehT .enil dnammoc eht65
~ J the user will never make a mistake or change what was typed in.
 6eb yam stnemetats ESRAP erom on ,desrap neeb sah LOE na ecnO .8 65	
~ J executed without first doing a PROMPT statement to reinitialize the
6tsal eht ot kcab ylno rucco lliw gnisrapeR% .metsys gnisrap65
~ J executed prompt statement.
~    6ot ,tnemetats LOE esraP ticilpmi na setareneg tnemetats dnammoCoD A .9 65	
~ J require that commands first parse their parameters and then perform
6.TPMORP a yb dedecerp eb suht tsum ESRAP tneuqesbuS .snoitca rieht65
~ J If you fail to follow this rule, stange failures may happen,
6raf oot eteled uoy fi cexe dradnats eht ni kcab gnillaf gnidulcni65
~ J back, etc.
~   10. The GUIDE statement is equivalent to PARSE NOISE;
~  88..2288..11.. PPaarrssee FFiieelldd TTyyppeess~ , 
~ , The legal parse field types are:
~   . 6eht fo edis rehtie no raeppa yam secapS! .ammoc a sesrapo AMMOC65	
~  1 comma.
~  DAYTIME[ inputs a date and time field. The format is any general	
6sselnu deretne eb tsum emit dna etad htoB .tamrof emit/etad65
~  1 the date or time parse options are specified. The date is
6ni mrof dednapxe ni dna ,eulaV$ ni mrof lanretni ni denruter65!
g 74
~   $atom.
g DEVICEe parses a device name, including the closing ":". Returned in	
~   $atom (without the closing ":").
~  ) 6.stekcarb elgna eht gnidulcni ,eman yrotcerid a sesrapG YROTCERID65	
~   Returned in $atom, fully expanded as device:<directory>.
3 6yb detarapes seirotcerid fo tsil a retne ot resu eht swolla TSILYROTCERID65	
~   commas. Each directory specification may contain wildcards.
6eht hguorht pool ot swolla erudecorp metsys YROTCERIDTXEN$ ehT65
~   list of directories matching the list. The current directory
6egap eeS( .elbairav metsys yrotceriD$ eht ni denruter si eman65
~   33). The system variable $xatom does not work for this field
~   type.
g EOL~  is used to parse a carriage return. If the user is doing	
6retfa etucexe ot eunitnoc lliw dnammoc eht neht sesrap elpmis65
~   each parse.# Once a PARSE EOL has been executed the PCL
6TPMORP eht eeS .stnemetats ESRAP erom yna od tonnac dnammoc65
~   PCL statement on page 82. It is not necessary, nor is it
=6.stnemugra dnammoc gnisu nehw LOE a yficeps ot ,dettimrep65
g FIELDo parses an arbitrary parameter delimited by a nonalphanumeric	
6eht eeS( .elbaliava si egassem pleh dradnats oN .retcarahc65
~   HELP field option, page 77). Returned in $atom.
~  6.)arfni rfc( ELIFTUPTUO dna ELIFTUPNI naht lareneg erom siy ELIF65	
~   This field type has many more options available. Defaults may
6ehT .sdleif noitacificeps elif eht fo yna rof deificeps eb65
~   user may specify that the field is to be "parse only" which
6dleif eeS( .noitacificeps elif dilav a rof skcehc ylerem65
~   options DEFAULT_DEV, DEFAULT_DIR, DEFAULT_EXT, DEFAULT_GEN,
6ot elbissop ton si tI ).DLIW dna ,TUPTUO ,TUPNI ,MAN_TLUAFED65
~   have more than one FILE field in a single Parse statement.
6*eliF$ eht ni smrof suoirav rednu denruter si eman elif ehT65
~   system variables (see page 19) and $parse (see page 17).
3 6.sammoc yb detarapes selif fo tsil a retne ot resu eht swollaQ TSILELIF65	
~   Each file specification may contain wildcards. The $NEXTFILE
6hctam taht selif eht hguorht pool ot swolla erudecorp metsys65
~   the list. The current file is returned in the same way as for
6motax$ elbairav metsys ehT .)arpus rfc( epyt dleif ELIF eht65
~   does not work for this field type.
~   6sihT .stsixe ydaerla taht elif a yficeps ot resu eht swollaG ELIFTUPNI65	
~   field type does not allow any fields of the file specification
6elif ehT .sepyt dleif TSILELIF dna ELIF eeS( .detluafed eb ot65
~   is returned in the same way as for the FILE field type (cfr
~   supra).
g KEYWORD[ allows a list of keywords to be specified. The user may	
6denifed si tsil ehT .tsil eht ni sdrowyek eht fo eno tceles65
~   by using the WORDS field option (see page 78). The keyword
6ti htiw detaicossa eulav eht dna ,mota$ ni denruter si gnirts65
~   is returned in $value.!
~  ~       75
6,edon elbaliava na eb tsum sihT .eman edon krowten a sesrapy EDON65	
~  1 unless the PARSEONLY option is specified. Returned in $atom.
~  NOISE string-constant	
~  1 mostly used for command arguments. This field type will cause
6eht fi sesehtnerap ni tuo depyt eb ot gnirts eht ni txet eht65
~  1 user types an escape. The command GUIDE "text" is equivalent
~  1 to PARSE NOISE "text".
~    6swolla noitpo dleif XIDAR ehT .dleif tupni regetni na sesrape REBMUN65	
~  1 for numbers in some radix other than 10 (see page 77). The
e6.mota$ ni gnirts eht dna ,eulav$ ni denruter si eulav65
~  OTHERWISEG is a special field-type which is meaningful only in the	
6eht eb tsum ti ,deificeps fI .)03 egap ees( esraP xelpmoc65
~  1 last field in the Parse statement. The Otherwise case will be
6sepyt dleif eht fo enon sehctam elbaliava tupni eht fi nekat65
~  1 provided. The otherwise field type does not consume any of
36.elbazingocer ton saw ti taht setacidni ylno ti ;tupni eht65
~  OUTPUTFILE= causes the system to parse for a file name that does not	
6elif eht fo sdleif yna wolla ton seod epyt dleif sihT .tsixe65
~  1 specification to be defaulted.) Wild cards may not be
6eht rof sa yaw emas eht ni denruter si elif ehT .deificeps65
~  1 FILE field type (cfr supra).
~  Q 6si dleif ehT! .setouq elbuod ni deniatnoc dleif a sesrap) GNIRTSDETOUQ65	
~  1 returned in $ATOM without the quotes.
~ t 6.e.i( sehctiws fo tsil a taht tpecxe DROWYEK ot ralimis sie HCTIWS65	
~  1 KEYWORDS preceded by a slash) is parsed. The list is defined
6hctiws ehT .)87 egap ees( noitpo dleif SDROW eht gnisu yb65
~  1 string is returned in $atom, and the associated value in
~  1 $value.
~  TEXTy parses all the input up to the carriage return. Returned in	
~  1 $ATOM.
6tnatsnoc-gnirts NEKOT65	
~  1 parses a field that exactly matches the string. Returned in
~  1 $atom.
~  USERLISTQ allows the user to enter a list of directories separated by	
6ehT .sdracdliw niatnoc yam noitacificeps resu hcaE .sammoc65
~  1 $NEXTUSER system procedure allows to loop through the list of
6ni denruter si eman resu tnerruc ehT .tsil eht gnihctam sresu65
~  1 the $USER system variable. (See page 33). The system variable
~`6.epyt dleif siht rof krow ton seod motax$65
~  USERNAMEQ parses a username (without angle brackets).# Returned in	
~  1 $atom.!
g 76
g 88..2288..22.. PPaarrssee FFiieelldd OOppttiioonnss
~  The Field3_____ optionsG_______ directlyQ________ relatedG_______ to__ parsingG_______ file)____ names3_____ (File, InputFile,
g OutputFile, and FileList) are:g 
 DEFAULT_DEV string	
~   For FILE and FILELIST fields, specify the default device. The
6tI .elbairav gnirts resu a ro tnatsnoc gnirts a eb yam gnirts65
~   may not include the field delimiters (: for device, <..> for
6gnirts a eb ton yam nevig gnirts ehT .)cte ,yrotcerid eht65
~   expression (eg formed by concatenation), nor a string system
~   variable: 
_ 6;yrotceriDdetcennoC$ = ridym65	
~ H PARSE (FILE (DEFAULT_DEV "DSK",
 6;))ridym RID_TLUAFED~  65
g DEFAULT_DIR string	
~   For FILE and FILELIST fields, specify the default directory.
6.ved_tluafeD rof sa emas eht era gnirtS fo smrof dewolla ehT65
g DEFAULT_NAM string	
~   For FILE and FILELIST fields, specify the default file name.
6.ved_tluafeD rof sa emas eht era gnirtS fo smrof dewolla ehT65
g DEFAULT_EXT string	
~   For FILE and FILELIST fields, specify the default extension.
6.ved_tluafeD rof sa emas eht era gnirtS fo smrof dewolla ehT65
g DEFAULT_GEN code	
~   For FILE and FILELIST fields, specify the default generation.
6- ,)noitareneg txen( + ,)noitareneg tsehgih( 0 era sedoc ehT65
~   (first generation), * (all generations), or a generation
~   number: 
} 6;))0 NEG_TLUAFED( ELIF( ESRAP65	
~ H PARSE (FILE (DEFAULT_GEN +));
~    6.elif deteled a rof sesrap ,TSILELIF dna ELIF sepyt dleif roF[ DETELED65	
~   Turns on COMAND JSYS bit GJ%DEL.
~  ) 6gnitsixe na rof sesrap ,TSILELIF dna ELIF sepyt dleif roFo TUPNI65	
~   file. Turns on COMAND JSYS bit GJ%OLD.
~ j 6elbisivni na rof sesrap ,TSILELIF dna ELIF sepyt dleif roFG ELBISIVNI65	
~   file. Turns on COMAND JSYS bit GJ%IIN.
~ ` 6.elif wen a rof sesrap ,TSILELIF dna ELIF sepyt dleif roFe TUPTUO65	
~   Turns on COMAND JSYS bit GJ%FOU.
~  ) 6yldilav a rof esrap ot dnammoc eht swolla ,sesrap elif roFG YLNOESRAP65	
~   formatted file specification without requiring that the file
6ot ton edon eht swolla ,sesrap edoN roF! .tsixe yllautca65
~   exist; similarly for Device, Directory, and User. The string
6.MOTA$ ni denruter eb lliw dleif siht rof sretne resu eht taht65!
~  ~       77
6.drac dliw a yficeps ot resu eht swolla ,epyt dleif ELIF roFy DLIW65	
~  1 This allows to step through the files matching the
6eht eeS .TSILELIF a rof sa yaw emas eht ni noitacificeps65
~  1 FILELIST field option for the most general file wild card
~  1 parsing method.
~  o 6:era _______Ggnisrap ____)eman ____)elif __ot _______Gdetaler ________Qyltcerid ___ton _______Gsnoitpo ______=sdleiF ___ehT65
~  DATEy Parse only the date for field type DAYTIME.
~ 8 6tluafed eht taht dna deppiks eb yam dleif eht taht seificepS gnirts TLUAFED65	
~  1 value should be string.% String may be either a string
6gnirts a eb ton yam tI .elbairav gnirts resu a ro tnatsnoc65
~  1 expression (eg formed by concatenation) nor a string PCL
~6.)yrotceriDdetcennoC$ ekil( elbairav65
~  ERRORo For command arguments only, branch to label on a parse error.	
~.6.epyt-dleif ESIWREHTO eht esu esrap xelpmoc nI65
~  HELP string3 If the user enters a ? at the field prompt, the help message	
6gnirts a rehtie eb yam gnirtS% .deyalpsid si gnirts ni65
~  1 constant or a user string variable. It may not be a string
6LCP gnirts a ron )noitanetacnoc yb demrof ge( noisserpxe65
~  1 variable (like $ConnectedDirectory). By default the use of
6ot hsiw uoy fI .pleh tluafed metsys eht ffo snrut noitpo siht65
~  1 append the default help message, give the STDHELP option after
~  1 the HELP option: 
~  7 6,)2:"decnerefernu_syaD" ,1:"egasU"( SDROW( DROWYEK ESRAP65	
~ l ~  HELP "Next Field for Sorting", STDHELP ) ;
~ l Will give the ? help:
~ t 6:gniwollof eht fo eno ,gnitros rof dleif txeN?65
~ l Days-Unreferenced Usage
~   4 6uoy fi tluafed eht si sihT .pleh metsys tluafed eht sesserppuSe PLEHON65	
~  1 use the HELP option.
~   $ 6ta desu eb ton yam elif dnammoc tceridni na taht seificepS= TCERIDNION65	
~  1 this field. Turns on bit CM%XIF in the COMAND JSYS.
~  RADIX Integer-constant	
~  1 For field type NUMBER, specifies that the number typed in is
~  1 in radix integer constant.
~  e 6yllautneve ,02spoT yb dedivorp egassem pleh dradnats eht esU[ PLEHDTS65	
~  1 appending it to the HELP option help text (in this case
6elbacilppa toN .noitpo PLEH eht retfa nevig eb tsum PLEHDTS65
~  1 for the field type FIELD.
~ . 6.EMITYAD epyt dleif rof emit eht ylno esraPy EMIT65
~  WILDy For the DIRECTORY and USERNAME field types, allows the user to	
6eht hguorht pets ot swolla sihT .drac dliw a yficeps65
~  1 directories or users matching the specification in the same
6sepyt-dleif eseht eeS .TSILRESU ro TSILYROTCERID a rof sa yaw65!
g 78
~   for the most general wild card parsing method.
~j6)]... 2tni : 2drow,[ 1tni : 1drow( SDROW65	
~   or
~ j 6)]... 2tni :: 2drow,[ 1tni :: 1drow( SDROW65	
~    For the field types KEYWORD and SWITCH, the WORDS option
6:eb yam drow hcaE .)sehctiws ro( sdrowyek fo tsil eht sevig65
~   a string enclosed in double quotes	
~   6derreferP eht si sihT ."loboc_86" elpmaxe rof65
~   0 syntax; it is needed for words which start
~   0 with a digit.
~  6.321 ekil rebmun regetni naQ rebmun a65
~   a worde an alphanumeric string beginning by a letter,	
~   0 like a13.
~  o 6dnoces ehT .eulav$ ni derots eb lliw ":" eht retfa regetni ehT65	
~   form of the WORDS option, wich uses "::" is reserved for
6desu eb ton yam ti ;":eteled/" :mrof eht fo seHCTIWS gnisrap65
~   in command arguments, but only in PARSE statements.
e 6detrevnoc si ti drow a nihtiw sraeppa )"_"( erocsrednu na fI65	
~   into a hyphen ("-").
G6 :elpmaxe roF65
~ H PARSE BEGIN	
~   6,)2:"der" ,1:"eulb"( SDROW( DROWYEK 65
~ H ~  HELP "Select Colour", STDHELP)
~ H ) : colour = $value;
~ $ 6;"ruoloc dilavnI" yalpsid :ESIWREHTO 65
~ H  END;
K6_______GddeettaalleeRR65
~ H GUIDE - page 62	
628 egap - TPMORP65!
~  ~       79
~   r PPRREESSEERRVVEEQ________%
~  88..2299..3_____ PPRREESSEERRVVEEQ________~ , 
G 6________QnnooiittccnnuuFF65
~ , The PRESERVE command allows the user to save the current PCL environment
6LCP htiw cexE eht yfidom ot srotartsinimda metsys swolla tI .llacer retal rof65
~  and then save the entire Exec for use at his or her site.
~ , FFoorrmmaatt=______
~ l PRESERVEQ________ option=______ file-3_____name)____	
~ l 
[ 6:si noitpo65
~ l  ENVIRONMENTo___________
Q6____)CEXE 65
~ , NNootteess3_____
~   1. An ENVIRONMENT is all the PCL commands, procedures, and variables	
~ J that the user has defined.
~    6eht fo noisrev delipmoc ,lanretni eht sniatnoc elif TNEMNORIVNE ehT .2 65	
~ J PCL objects. It will not be recompiled when declared.
)6.VNE.CEXE si stnemnorivne rof eman elif tluafed ehT .3 65
~   4. Format 2 is for system administrators. The EXEC that is written	
6llA# .noitallatsni eht yb esu rof >METSYS< no decalp eb yam65
~ J commands that have been defined may not be un-declared by the
~ J users.
~   5. The default file name for PRESERVE EXEC is EXEC.EXE.
~ , EExxaammpplleeG_______
~ l PRESERVE ENVIRONMENT payroll.env	
y6exe.cexe CEXE EVRESERP65
~ , RReellaatteeddG_______
~  635 egap - ERALCED65	
~ l UNDECLARE - page 92!
g 80
~   I PPRROOCCEEDDUURREE[_________%
g 88..3300..3_____ PPRROOCCEEDDUURREE[_________~  
G 6________QnnooiittccnnuuFF65
~  A PROCEDURE definition in a PCL source file creates a procedure. All
6renni on era ereht ";level pot" eht no dna yllabolg deralced era serudecorp65
g procedures.
6______=ttaammrrooFF65
~ H [ type)____ ] PROCEDURE[_________ name)____ [ (arguments)o___________ ]	
~ H 
y 6:si stnemugra65
~ H  arglistG_______ [ ;_ arglistG_______ ...___ ]
~ H 
e 6:si tsilgra65
~ H  type)____ param1=______ [ ,param2...e__________ ]
~ H 
G 6:si epyt65
~ H  INTEGERG_______ or
G6______=GNIRTS 65
~  NNootteess3_____
g  1. A PROCEDURE need not have arguments; if it has none then the	
~ & parentheses are not necessary.
~  o 6,stnemugra GNIRTS ,stnemugra REGETNI rehtie evah yam ,ERUDECORP A .2 65	
~ & or both. The string and integer arguments may appear in any order
~ & in the arguments list.
g  3. The procedure may change the value of its arguments. The modified	
6eb tsum tnemugra eht esac siht nI .rellac eht ot denruter si eulav65
~ & a variable.
g  4. If the type is not given the procedure is untyped and must be	
~ & CALLed (see page 47).
g  5. If type is given the procedure is typed. The type may be either	
6epyt taht fo tluser a nruter tsum erudecorp ehT .GNIRTS ro REGETNI65
~ & (see the RETURN statement on page 84). A typed procedure may be
~`6.stnemetats LCP ni elbairav a fo ecalp ni desu65
g  6. Specifying the names of the parameters in the argument list defines	
6eht nihtiw niaga deralced eb ton deen yeht ;sesoprup lla rof meht65
~ & body of the procedure.
~  EExxaammpplleeG_______!
~  ~       81
~f6;hctam_rts,gnirts_tupni gnirts( hctam ERUDECORP65	
~ l ~ . integer start_point);
~ l BEGIN
6;...65
~ l RETURN
)6DNE65
~ , If a user has an integer procedure called finger that looks at a SYSTAT and
6 :desu eb dluoc erudecorp taht ,resu detseuqer eht fo rebmun boj eht snruter65
~ l COMMAND findem (username:guy);	
~86NIGEBQ 65
~ l [ EXTERNAL INTEGER PROCEDURE finger;
[6NEHT 1- qen )yug(regnif FI[ 65
~ l e DISPLAY guy + " is at " + $string(finger(guy))
~ l [ ELSE
~ B 6;"no ton" + yug YALPSIDe 65
~ l [ EXIT
6DNEQ 65
~  The procedure finger would look like: 
U 6;)eman GNIRTS( REGNIF ERUDECORP REGETNI65	
~ l BEGIN
Q 6;metog GNIRTS 65
~ l  DOCOMMAND "systat " + name TO gotem;
61- nruter NEHT 0 = )metog(htgnel$ FI65
~ l ELSE return $integer(gotem[3:2])
~ l END
#6_______GddeettaalleeRR65
~ l CALL - page 47	
 695 egap - LANRETXE65
~ l RETURN - page 84!
g 82
~   X PPRROOMMPPTT=______%
g 88..3311..3_____ PPRROOMMPPTT=______~  
G 6________QnnooiittccnnuuFF65
~  When using PARSE to parse parameters, it only permits you to parse one
6uoy ,LOE ESRAP htiw ,desrap yletelpmoc neeb sah enil eht ecno ;enil dnammoc65
g can not use PARSE again, without causing PCL to obtain and begin parsing a new
6rof tpmorp ot dnammoc LCP eht swolla tnemetats LCP TPMORP ehT .enil dnammoc65
g more input parameters after a PARSE EOL has been executed.
~  FFoorrmmaatt=______
~ H PROMPT=______ [ NOECHO=______ ] string=______
~  NNootteess3_____
g  1. The PROMPT statement allows the user to have subcommands to	
~ & commands.
g  2. After a PROMPT statement, the user may again do PARSE statements.
 6dnammoc fo enil eritne taht rof gniohce ffo snrut noitpo OHCEON ehT .3 65	
~ & typein; this must be done at the Prompt because of the way command
~ & typein and echoing is done.
~    6a ni epyt ot resu eht rof elbissimrep si ti ,gnisrap dnammoc nI .4 65	
~ & field and have it recognized by PCL and then to type enough rubouts
6ydaerla ,reilrae na neve ro ,dilavni dleif eritne eht ekam ot W^ ro65
~ & parsed field. When this happens, the system signals to the Exec
6sti teser won lliw metsys eht taht dna ,derrucco "esraper" a taht65
~ & internal pointer to the beginning of the command line and start
6,gnisrap enil dnammoc cisab gnirud sneppah esraper a nehW .niaga65
~ & PCL aborts the executing command completely and restarts the
6,gnisrap dnammocbus gniruD .gninnigeb eht morf margorp dnammoc65
~ & this is undesirable.' Instead, when a reparse occurs during
6TPMORP a yb hcus sa deifitnedi ylreporp( gnisrap dnammocbus65
~ & statement), PCL jumps back to the last-executed Prompt statement as
6LCP eht fo noitucexe semuser dna demrofrep neeb dah oToG a fi65
~ & program from that point. Then, when the user's Parse statements
6-er lliw metsys eht hcihw sdleif eht hctam lliw yeht ,etucexe-er65
~ & present to the program.
~  EExxaammpplleeG_______!
~  ~       83
~ l COMMAND subcomm;	
= 6;eulav_a REGETNI NIGEB 65
~ l  PARSE NUMBER;
 6EULAV$ = eulav_a 65
~ l  ...;
3 6;LOE ESRAP 65
~ l  ...;
G 6;"@@" TPMORP 65
~ l  PARSE KEYWORD ( Words("first":1, "last":2, "all":3));
~ l  ...;
3 6;LOE ESRAP 65
~ l  PROMPT NOECHO "Please enter your password: "
~ l  PARSE TEXT;
[6... 65
~ l  END
-6_______GddeettaalleeRR65
~ l PARSE - page 71!
g 84
~   X RREETTUURRNN=______%
g 88..3322..3_____ RREETTUURRNN=______~  
G 6________QnnooiittccnnuuFF65
~  The RETURN PCL statement causes a procedure to return to the calling
g routine.
6______=ttaammrrooFF65
~ H RETURN=______ [ expressione__________ ]
~  NNootteess3_____
g  1. A RETURN always returns to the calling routine. If in a command,	
~ & the command returns to the EXEC.
~  [ 6depyt a nihtiw fi dedivorp eb tsum noisserpxe lanoitpo ehT .2 65	
~ & procedure, and must be of the same type as the procedure. It
e6.)08 egap ees( erudecorp eht yb denruter eulav eht senifed65
~  EExxaammpplleeG_______
~ 
 6;wohs ERUDECORP65	
~ H  BEGIN
~ H  display $jobno + " " + $username;
~ H  RETURN
36DNE 65
~ H INTEGER PROCEDURE calc;
~ H BEGIN
[ 6;latot REGETNI 65
~ H  ...;
o 65 + latot NRUTER 65
~ H END
#6_______GddeettaalleeRR65
~ H ABORT - page 44	
 608 egap - ERUDECORP65!
~  ~       85
~   | SSEELLEECCTT=______%
~  88..3333..3_____ SSEELLEECCTT=______~ , 
G 6________QnnooiittccnnuuFF65
~ , The SELECT statement provides an orderly way of choosing one of several
6.noisserpxe gnirts ro regetni na fo eulav tnerruc eht no desab ekat ot shtap65
~  The statement tagged with the expression having the same value is executed,
~  and all others are ignored.
~ , FFoorrmmaatt=______
~ l SELECT=______ test_expression~_______________ OF__ BEGIN3_____	
[6;_________[tnemetats____)-LCP _: ____)tset 65
~ l  test)____ :_ PCL-)____statement[_________;
~ l  ..
 6;___DNE 65
~ l 
G 6:si tset65
~ l  tag1)____ [ ,_ tag2)____ ...___ ]
~ l 
= 6:si gat65
~ l  expressione__________ or
~  6ro ___________o2noisserpxe __OT ___________o1noisserpxe 65
~ l  OTHERWISE[_________
~ , NNootteess3_____
~   1. All the tags expressions must be of the same type as the test	
~ J expression (ie integer or string).
~  G 6snoisserpxe xelpmoc eb yam sgat eht ,tnemetats ESAC eht ekilnU .2 65	
~ J instead of constants. After evaluating the select expression, PCL
6eulav eht erapmoc dna nrut ni noisserpxe gniggat hcae etaulave lliw65
~ J to the value of the select expression. If they are equal, the
6neht lliw noitucexE .detucexe eb lliw tnemetats gnidnopserroc65
~ J proceed after the SELECT statement.
~  = 6eb ot si tnemetats deggat eht taht setacidni drowyek ESIWREHTO ehT .3 65	
~ J executed if all the preceding tests fail. If present, the OTHERWISE
6.nevig tset tsal eht eb dluohs dna ,tset a ni gat ylno eht eb tsum65
~   4. If all the tests fail, and there is no OTHERWISE, then execution	
~6.tnemetats TCELES eht gniwollof seunitnoc65
~   5. The intent of providing SELECT in addition to CASE is that CASE is	
6ti gnikam ,sesserdda tnemetats fo elbat a htiw detnemelpmi65
~ J appropriate for small ranges of the selection expression, say from
6hcihw stset fo seires a yb detnemelpmi si TCELES saerehw ,01 ot 165
~ J might as well have been coded by user statements like:!
g 86
~ H IF x=1 THEN s1	
3 62s NEHT 85=x FI ESLE65
~ H ELSE IF x=101 THEN s3
~6... ESLE65
~ & This form is suitable for a large range in the selection range.
~  EExxaammpplleeG_______
 6...65	
~ H SELECT $Value OF BEGIN
~  6eulav$ fi detucexe{ : 001 ,3 OT 1 65
~ H ~ 8 is between 1 and 3, or 100};
 6;}9 ro 6 si eulav$ fi detucexe{ :[ 9,6 65
~ H  OTHERWISE : {executed if none of the above};
~ H  END;
36...65
~ H 
665
~ H COMMAND seltest(USERNAME:unam);
~ H ...
e 6FO manu TCELES65
~ H  BEGIN
~ H  "OPERATOR":) display "the operator";
6"sreenigne eht" yalpsid :"SCITSONGAID" 65
~ H  END
)6DNE65
~  RReellaatteeddG_______
i 636 egap - FI65	
~ H CASE - page 48
) 678 egap - LLATCELES65!
~  ~       87
~   m SSEELLEECCTTAALLLL[_________%
~  88..3344..3_____ SSEELLEECCTTAALLLL[_________~ , 
G 6________QnnooiittccnnuuFF65
~ , The SELECTALL statement is very similar to the SELECT statement except that
6eht hguorht sllaf"( seunitnoc gnitset eht ,dnuof neeb sah hctam a retfa65
~  SelectAll" so that multiple PCL statements may be selected one after the
~  other.
 6______=ttaammrrooFF65
~ l SELECTALL[_________ test_expression~_______________ OF__ BEGIN3_____	
y6;_________[tnemetats____)-LCP _: ____)tset 65
~ l  test)____ :_ PCL-)____statement[_________;
~ l  ..
 6;___DNE 65
~ l 
G 6:si tset65
~ l  tag1)____ [ ,_ tag2)____ ...___ ]
~ l 
= 6:si gat65
~ l  expressione__________ or
~  6ro ___________o2noisserpxe __OT ___________o1noisserpxe 65
~ l  ALWAYS=______ or
6_________[ESIWREHTO 65
~ , NNootteess3_____
~   1. All the tags expressions must be of the same type as the test	
~ J expression (ie integer or string).
~  G 6snoisserpxe xelpmoc eb yam sgat eht ,tnemetats ESAC eht ekilnU .2 65	
~ J instead of constants. After evaluating the select expression, PCL
6eulav eht erapmoc dna nrut ni noisserpxe gniggat hcae etaulave lliw65
~ J to the value of the select expression. If they are equal, the
6noitucexe eht taht retfA .detucexe eb lliw tnemetats gnidnopserroc65
~ J proceeds by testing against the next tests in the SELECTALL, until
~ J all tests have been made.
~   $ 6a nihtiW .dehctam tset suoiverp on fi sehctam gat ESIWREHTO ehT .3 65	
~ J test, it must be the only tag.
~  o 6ESIWREHTO ,nosaer siht roF .noisserpxe yna sehctam gat SYAWLA ehT .4 65	
~ J should always precede any ALWAYS. If present ALWAYS must the only
~ J tag in a test.
~   5. SELECTALL must be used where a SELECT would be used and multiple	
~ J successive selections are needed.
~ , EExxaammpplleeG_______!
g 88
~ H SELECTALL $value OF BEGIN	
~   6}3 dna 1 neewteb si eulav$ fi detucexe{ :) 3 OT 1 65
~ H  1, 5= : {executed if $value is 1 or 5}
[ 6}5 ro 3 ,2 ,1 ton si eulav$ fi detucexe{ : ESIWREHTO 65
~ H  ALWAYS) : {executed whatever the value of $value}
~ H  END;
K6_______GddeettaalleeRR65
~ H CASE - page 48	
636 egap - FI65
~ H SELECT - page 85!
~  ~       89
~     SSEETT___%
~  88..3355..3_____ SSEETT___G665
~ , FFuunnccttiioonnQ________
~ , New options to the EXEC SET command will set the values of global variables
~  declared by the DECLARE command.
~ , FFoorrmmaatt=______
~ l SET___ INTEGER-Q________VARIABLEQ________ (named) variableQ________ (to) value3_____	
~ l 
~ l SET___ STRING-G_______VARIABLEQ________ (named) variableQ________ (to) value3_____
~ l 
~ l SET___ [ NO__ ] COMMAND-Q________TRACE3_____ (OF GENERATED COMMANDS)
~ l 
~ l SET___ DEFAULTG_______ DECLAREG_______ /CONFIRMQ________
 6__________eMRIFNOCON/~ L 65
~ , NNootteess3_____
~   1. The variable must have been previously declared by a DECLARE	
~ J command. see page 53.
~   2. The INFORMATION command may be used to display the setting of a	
~ J global variable. see page 64.
~  y 6lla lanimret eht ta yalpsid ot LCP sesuac ECART-DNAMMOC gnitteS .3 65	
~ J DoCommand statements as they are executed.
~ t 6eht rehtehw yas ot uoy swolla ERALCED rof tluafed eht gnitteS .4 65	
~ J DECLARE command should, by default, confirm its actions.
~ , EExxaammpplleeG_______
~ l @SET integer-variable doneflag 0	
e6A-SPOT tsoh gnirts TES@65
~ , RReellaatteeddG_______
~ F 646 egap - NOITAMROFNI65	
~ l DECLARE - page 53
 629 egap - ERALCEDNU65!
g 90
~   S SSYYNNOONNYYMMG_______%
g 88..3366..3_____ SSYYNNOONNYYMMG_______~  
G 6________QnnooiittccnnuuFF65
~  The SYNONYM command defines a synonym to an original Exec command.
~  FFoorrmmaatt=______
~ H SYNONYMG_______ new-nameQ________ original-[_________name)____
~  NNootteess3_____
g  1. The SYNONYM command may not be given inside a command or procedure.	
6cexE eht sa yaw emas eht ni selif ecruos LCP ni desu si tI65
~ & "@DECLARE SYNONYM" command (see page 53).
~  EExxaammpplleeG_______
~ H SYNONYM AuRevoir LOGOUT
~  RReellaatteeddG_______
~  635 egap - ERALCED65!
~  ~       91
~   | TTYYPPEEIINN=______%
~  88..3377..3_____ TTYYPPEEIINN=______~ , 
G 6________QnnooiittccnnuuFF65
~ , The TYPEIN PCL statement will send a character string to an invoked
~  program.
6______=ttaammrrooFF65
~ l TYPEIN=______ [ NORETURNQ________ ] string=______
~ , NNootteess3_____
~   1. TYPEIN will send string to the invoked program as though it had	
6eb lliw nruter egairrac A .lanimret gnillortnoc eht no depyt neeb65
~ J added to string, unless the NORETURN option is specified.
[ 6NIEPYT eno htiw margorp dekovni eht ot tnes eb yam senil lareveS .2 65	
~ J statement. PCL will strip the extra line feeds from the string
6lanimret rieht tcepxe yllamron smargorp esuaceb ,ti gnidnes erofeb65
~ J input to be terminated by carriage returns only. 
~ l TYPEIN "tape copytp:	
60061 ytisnedQ 65
~ l Q ssname area backup"
~  k 6litnu stiaw LCP ,margorp eht ot dessap neeb sah gnirts eht retfA .3 65	
~ J the program either halts or waits for more terminal input.
~ , EExxaammpplleeG_______
~ l COMMAND runprog (text (help "program to run"):prog_to_run);	
~ l BEGIN
~  6;txet_margorp GNIRTS65
~ l ...;
~  6;nur_ot_gorp EKOVNI65
~ l ...;
~ B 6;txet_margorp TUOEPYTTEG65
~ l ...;
[ 6;"keew" NIEPYT65
~ l ...
6DNE65
~ l @
6_______GddeettaalleeRR65
~ l INVOKE - page 66	
 606 egap - TUOEPYTTEG65
~ l CLEARTYPEOUT - page 50
676 egap - MARGORPLLIK65!
g 92
~   I UUNNDDEECCLLAARREE[_________%
g 88..3388..3_____ UUNNDDEECCLLAARREE[_________~  
G 6________QnnooiittccnnuuFF65
~  The Exec UNDECLARE command removes PCL customizations (and even original
g Exec commands from the Exec.
~  FFoorrmmaatt=______
~ H @UNDECLAREe__________ (from3_____ PCL))____ [ cfm___ ] option=______	
~ H 
= 6:si mfc65
~ H  /ConfirmQ________ or
)6__________emrifnoCoN/ 65
~ H 
[ 6:si noitpo65
~ H  ALL___ (Customizations) or
o 6ro ____)eman____________y-dnammoc-LCP )demaN( _______GDNAMMOC 65
~ H  ORIGINAL-[_________COMMANDG_______ (Named) Exec-command-~_____________name)____ or
G6ro ____)eman______________~-erudecorp-LCP )demaN( _________[ERUDECORP 65
~ H  SYNONYMG_______ (Named) synonym-Q________name)____ or
6____)eman_____________~-elbairav-LCP )demaN( ________QELBAIRAV 65
~  EExxaammpplleeG_______
~ H @Undeclare (from PCL) variable Term_typ;
~  RReellaatteeddG_______
~  635 egap - ERALCED65	
~ H INFORMATION - page 64
696 egap - LANIGIROON65!
~  ~       93
~     UUNNTTIILL3_____%
~  88..3399..3_____ UUNNTTIILL3_____[665
~ , FFuunnccttiioonnQ________
~ , The UNTIL PCL statement provides loop control for PCL routines.
~ , FFoorrmmaatt=______
~ l UNTIL3_____ condition[_________ DO__ PCL___ statement[_________
~ , NNootteess3_____
~   1. As long as the condition is not true, the PCL statement is	
~ J repeatedly executed.
~ , EExxaammpplleeG_______
6_______GddeettaalleeRR65
~ l DO - page 56	
 649 egap - ELIHW65!
g 94
~   ] WWHHIILLEE3_____%
g 88..4400..3_____ WWHHIILLEE3_____~  
G 6________QnnooiittccnnuuFF65
~  The WHILE PCL statement provides loop control for PCL routines.
~  FFoorrmmaatt=______
~ H WHILE3_____ condition[_________ DO__ PCL___ statement[_________
~  NNootteess3_____
g  1. As long as the condition is true the PCL statement is repeatedly	
~ & executed.
=6_______GeellppmmaaxxEE65
~  RReellaatteeddG_______
i 665 egap - OD65	
~ H UNTIL - page 93!
g ~       95
g II..__ FFDDBB___ CCOODDEESS3_____~  !
g ~      105
g IIII..___ CCRRDDIIRR//GGTTDDIIRRo___________ DDIIRREECCTTOORRYY[_________ AARRGGUUMMEENNTTQ________ BBLLOOCCKK3_____~  !
~  ~      109
~6___LLCCPP __FFOO _______GNNOOIISSRREEVV ____)PPDDNNFF ___EEHHTT __OOTT ________QCCIIFFIICCEEPPSS __________eSSEEIITTIILLIICCAAFF ____)..IIIIII65
~ , I have introduced several extensions to the standard version of PCL. These
6fo ydob niam eht ni si noitatnemucod rieht( ereh ylfeirb detsil era snoisnetxe65
~  the manual). If you are interested in these extensions, contact: 
~ l Michel E Debar	
= 6ertneC gnitupmoC PDNF65
~ l Rue Grandgagnage, 21
[6rumaN 0005-B65
~ l Belgium
Q665
~ l Phone: +32.81.22-06-31
o 6)muigleB( .B.maN.caF 222.95 :xeleT65
~ , WILD option allowed for FILE, DIRECTORY and USERNAME parse field types.
~  $NEXTFILE working after PARSE (FILE (WILD)).
~  Q 6dna selbairav detaicossa htiw ,epyt dleif esrap TSILRESU dna TSILYROTCERID65
~  procedures $DIRECTORY, $USER, $NEXTDIRECTORY and $NEXTUSER.
~B6.rebmun%esab mrof eht fo srebmun desaB65
~ , $Getfield and $Setfield to manipulate bit fields within integers.
~6.sregetni fo ro/dna lacigol edivorp ot ro$ dna dna$65
~ , $DirectoryInfo_I and $DirectoryInfo_s read the information returned by the
~  GTDIR and GTDAL JSYS's.
~ , $FileInfo_I, $FileInfo_S, $FileSet accept mnemonic codes for the
6ni tnemugra gnirts a sa eman elif eht tpecca osla yehT .derised noitamrofni65
~  addition to the usual $parse or channel number.
6.BDF eht ni seirtne laudividni stes teSeliF$65
~ , $xatom and $command, return the last atom parsed and the last command
~  parsed.
~ , $termlength returns the length of the controlling terminal.!
g 110
~  A jsys interface is provided with the routines:
g $get_men and $Ret_mem	
~ j 6yromem esaeler dna eriuqca ot65
g $iput and $iget to set/read integers in memory
Q6sgnirts rof emas eht od tegs$ dna tups$65
g $jfny returns the jfn associated with a channel
6gnirts a fo yromem ni sserdda eht snruter[ colrts$65
g $jsys, $Jsys1 execute a Jsys
~  y 61sysj$ ro sysj$ retfa 4 ot 1 srotalumucca eht nruter) 4ca$ ot 1ca$65
g $jsysok[ indicates the success or failure of the last $jsys or $jsys1
 6lareves naps yam yehT .dewolla era !}...{! mrof eht fo stnemmoc enilnI65
g lines and may be nested.
~  6.dnE...nigeB ot etutitsbus a sa evres yam }...{65
~  Case and Select may have multiple tags in each case; each tag may be of the
g form Value1 TO Value2.
~  The SelectAll statement implements a select that "falls through" and goes
G6.)ssilB ni enotceleS ot si tceleS sa LCP ni tceleS ot si ti( gnihctam no65
~  The WORDS option allows quoted strings: 
W6))... ,1:"loboc_86"( SDROW(65
~  $Isfile (Filename) returns 1 if a file exists, else 0.
~ L 6edutingam ni tuptuo si rebmun eht 01 naht rehto si xidar eht fi gnirts$ nI65
g form, ignoring the sign bit.!
~  ~      111
~  IINNDDEEXX3_____	
) 665
~ r $Ac1 18
 681 tnuoccA$65
~ r $and 20
 671 dneppA$65
~ r $ARPAnet_Node 18
623 ,13 ,81 motA$65
~ r $Batch_Job 18
673 ,02 esolC$65
~ r $Command 18, 31
= 681 yrotceriDdetcennoC$65
~ r $Cr 17
 671 flrC$65
~ r $Curtad 18
681 etaD$65
~ r $DECnet_Node 19
691 yrotceriD$65
~ r $DirectoryInfo_I 21
612 S_ofnIyrotceriD$65
~ r $EMACSTerminal 19
o673 FOE$65
~ r $ExpandTad 22
622 I_ofnIeliF$65
~ r $FileInfo_S 22
=691 LeliF$65
~ r $FileN 19
691 SeliF$65
~ r $FileSet 24
691 VeliF$65
~ r $File_Dev 22
622 riD_eliF$65
~ r $File_Gen 22
622 maN_eliF$65
~ r $File_Typ 22
642 dleiFteG$65
~ r $Get_Mem 26
)672 tegI$65
~ r $Input 17
 652 daTtupnI$65
~ r $Integer 25
)672 tupI$65
~ r $IsFile 25
)672 nfJ$65
~ r $JobNo 19
672 sysj$65
~ r $Jsys1 27
691 kOsysJ$65
~ r $LastErrCode 19
691 rorrEtsaL$65
~ r $Length 25
3671 fL$65
~ r $MergeTad 25
) 652 yrotceriDtxeN$65
~ r $NextFile 25
652 resUtxeN$65
~ r $Nul 17
) 673 ,52 nepO$65
~ r $Or 25
 671 tuptuO$65!
g 112
~ N $OutputTad 25	
622 ,71 esrap$65
~ N $PromptEnb 19
 691 buSbnEtpmorP$65
~ N $PromptReg 19
691 buStpmorP$65
~ N $Quote 17
 673 ,52 daeR$65
~ N $ReadBinary 25
)672 mem_teR$65
~ N $SEARCH 11, 26
 662 desiaRhcraeS$65
~ N $SetField 26
3672 tegS$65
~ N $Sput 27
 662 gnirtS$65
~ N $Strloc 27
 691 rebmuNmreT$65
~ N $TermWidth 19, 20
e602 emiT$65
~ N $TType 20
 602 daehaepyT$65
~ N $User 20
 602 emaNresU$65
~ N $Value 20, 31
=662 tiaW$65
~ N $Write 26, 37
613 ,02 motaX$65
~ N 
3 611 <65
~ N <= 11
611 ><65
~ N 
3 611 =65
~ N 
3 611 >65
~ N 
~  644 ,31 TROBA65
~ N ALWAYS 87
 654 TNEMNGISSA65
~ N 
G 68 esaB65
~ N BEGIN 46
655 YRANIB65
~ N 
Q 674 LLAC65
~ N CASE 14, 48
673 lennahC65
~ N CLEARTYPEOUT 35, 50
y637 AMMOC65
~ N COMMAND 51
[ 603 stnemugra dnammoC65
~ N Comment 8
= 603 esrap xelpmoC65
~ N Concatenate 11
671 stnatsnoC65
~ N CvCtI 21
602 CtIvC65
~ N 
y 677 ,81 etaD65!
~  ~      113
~ r DAYTIME 73	
3675 MCD65
~ r DECLARE 5, 6, 53
677 ,67 TLUAFED65
~ r DEFAULT_DIR 76
667 TXE_TLUAFED65
~ r DEFAULT_GEN 76
667 MAN_TLUAFED65
~ r DELETED 76
647 ECIVED65
~ r DIRECTORY 74
G 647 ,33 tsilyrotceriD65
~ r DISPLAY 55
665 ,31 OD65
~ r DOCOMMAND 35, 57
~ r 
y 636 ,41 ESLE65
~ r END 46
= 66 tnemnorivnE65
~ r Eof 22
647 LOE65
~ r EQL 11
3 677 ,43 rorrE65
~ r Exec commands 35
=685 ,31 TIXE65
~ r EXPRESSIONS 40
)695 LANRETXE65
~ r 
[ 647 DLEIF65
~ r File 37, 43, 74
647 ,23 TSILELIF65
~ r Format 7
684 MORF65
~ r 
G 611 QEG65
~ r GETTYPEOUT 35, 60
G616 ,51 OTOG65
~ r GTR 11
3 657 ,26 EDIUG65
~ r 
Q 677 PLEH65
~ r 
e 636 ,41 FI65
~ r INFORMATION 5, 64
=667 ,73 tupnI65
~ r INPUTFILE 74
684 EGNARNI65
~ r INTEGER 65
 667 ELBISIVNI65
~ r INVOKE 35, 66
~ r 
G 672 nfJ65
~ r 
o 647 DROWYEK65
~ r KILLPROGRAM 67
~ r 
Q 67 lebaL65
~ r Length 11
)611 QEL65
~ r Logical expression 11!
g 114
~ N LSS 11	
[665
~ N NEQ 11
647 EDON65
~ N NOHELP 77
 677 TCERIDNION65
~ N NOISE 75
) 696 LANIGIROON65
~ N NOP 68
) 655 NRUTERON65
~ N NUMBER 75
~ N 
Q 68 latcO65
~ N ORIGINAL 5, 35, 70
678 ,57 ESIWREHTO65
~ N Output 37, 76
657 ELIFTUPTUO65
~ N 
~  621 retemaraP65
~ N Parse 30, 71
 643 rorre esraP65
~ N Parse options 31
3667 YLNOESRAP65
~ N PASALL 35
666 OSAP65
~ N PASSOUTPUT 66
634 eliF LCP65
~ N PRESERVE 79
Q 608 ,02 ,21 erudecorP65
~ N Prompt 19, 73, 82
~ N 
~ $ 657 GNIRTSDETOUQ65
~ N 
y 677 ,8 xidaR65
~ N RETURN 12, 13, 84
Q621 enituoR65
~ N 
Q 685 EVAS65
~ N SELECT 14, 85
678 LLATCELES65
~ N SET 5, 89
3 603 esrap elpmiS65
~ N STATEMENTS 42
)677 PLEHDTS65
~ N String 11
 611 gnirtsbuS65
~ N SWITCH 75
609 MYNONYS65
~ N Syntax 7
o665
~ N TEXT 75
 677 ,81 emiT65
~ N TO 48
 657 NEKOT65
~ N TOPROGRAM 58
619 ,53 NIEPYT65
~ N 
~  629 ERALCEDNU65
~ N UNTIL 13, 93
 657 ,33 tsilresU65!
~  ~      115
~ r USERNAME 75	
~ r 
y 671 elbairaV65
~ r Variables 9
~ r 
~  649 ,31 ELIHW65
~ r WILD 76, 77
)687 SDROW65!
~  ~       i
~B6________QSSTTNNEETTNNOOCC __FFOO _____3EELLBBAATT65
~  11.. IINNTTRROODDUUCCTTIIOONN~    y 1
61~   8 egaugnaL dnammoC elbammargorP .1.165	
~  1.2. PCL Uses~      1
636~1serutaeF LCP .3.165
~  1.4. Notational conventions~    3
656~1EECCAAFFRREETTNNII CCEEXXEE ..2265
~  33.. TTHHEE PPCCLL LLAANNGGUUAAGGEE~    Q 7
676~tamroF dnammoC lareneG .1.365	
~  3.2. PCL Constants~    [ 8
696~;selbairaV LCP .3.365
~  3.4. Reserved names~    G 10
6116~wnoitalupinaM gnirtS .5.365
~  3.6. Logical expressions~     11
6216~serudecorP .7.365
~  3.8. PCL Flow Control~    3 13
6316~1TROBA .1.8.365
~ @ 3.8.2. EXIT~    e 13
6316~;NRUTER .3.8.365
~ @ 3.8.4. DO, WHILE, UNTIL~   j 13
6416~FI .5.8.365
~ @ 3.8.6. CASE~    e 14
6416~;TCELES .7.8.365
~ @ 3.8.8. SELECTALL~    3 15
6516~'OTOG .9.8.365
~  44.. SSYYSSTTEEMM SSEERRVVIICCEESS~    Q 17
6716~YstnatsnoC metsyS .1.465	
~  4.2. System Variables~    3 17
6026~cserudecorP metsyS .3.465
~  4.4. System Procedures specific to $Jsys Interface, memory managementG 26
6926~1EECCAAFFRREETTNNII RREESSUU ..5565
~  5.1. Parse Formats~    Q 29	
6036~wESRAP elpmiS .1.1.565
~ @ 5.1.2. Complex PARSE~     30
6036~,stnemugrA dnammoC .3.1.565
~  5.2. Parse Options~    Q 31
6136~;stluseR esraP .3.565
~  5.4. FILELIST~      32
6336~"TSILRESU ,TSILYROTCERID .5.565
~  5.6. Parse error handling~     34
653~   B EECCAAFFRREETTNNII DDNNAAMMMMOOCC DDNNAA MMAARRGGOORRPP ..6665
~  6.1. Running Programs~    3 35	
6536~"sdnammoC CEXE gnitucexE .2.665
~  77.. IINNPPUUTT//OOUUTTPPUUTT~    o 37
6936~|EECCNNEERREEFFEERR ..8865
~  8.1. EXPRESSIONS~    e 40	
6046~@snoisserpxe regetnI .1.1.865
~ @ 8.1.2. String expressions~   V 40
6046~@snoisserpxe lacigoL .3.1.865
~  8.2. STATEMENTS~    o 42
6346~selif LCP .3.865
~  8.4. ABORT~     $ 44
6546~TNEMNGISSA .5.865
~  8.6. BEGIN - END~    e 46
6746~^LLAC .7.865
~  8.8. CASE~     . 48!
g ii
g 8.9. CLEARTYPEOUT~    [ 50	
6156~bDNAMMOC .01.865
g 8.11. DECLARE~      53
6556~bYALPSID .21.865
g 8.13. DO~     8 56
6756~vDNAMMOCOD .41.865
g 8.15. EXIT~     $ 58
6956~lLANRETXE .61.865
g 8.17. GETTYPEOUT~    e 60
6166~DOTOG .81.865
g 8.19. GUIDE~      62
6366~ESLE ... FI .02.865
g 8.21. INFORMATION~    [ 64
6566~?GNIRTS - REGETNI .22.865
g 8.23. INVOKE~      66
6766~MARGORPLLIK .42.865
g 8.25. NOP~     . 68
6966~LANIGIROON .62.865
g 8.27. ORIGINAL~    y 70
6176~NESRAP .82.865
~  8.28.1. Parse Field Types~   V 73
6676~&snoitpO dleiF esraP .2.82.865
g 8.29. PRESERVE~    y 79
6086~vERUDECORP .03.865
g 8.31. PROMPT~      82
6486~XNRUTER .23.865
g 8.33. SELECT~      85
6786~vLLATCELES .43.865
g 8.35. SET~     . 89
6096~bMYNONYS .63.865
g 8.37. TYPEIN~      91
6296~vERALCEDNU .83.865
g 8.39. UNTIL~      93
6496~NELIHW .04.865
g II.. FFDDBB CCooddeess~      95
6501~  e kkccoollBB ttnneemmuuggrrAA yyrroottcceerriiDD RRIIDDTTGG//RRIIDDRRCC ..IIII65
g IIIIII.. FFaacciilliittiieess ssppeecciiffiicc ttoo tthhee FFNNDDPP vveerrssiioonn ooff PPCCLL~ t 109
61116~xxeeddnnII65C920C009E12L08  