REDIT 1(103) COMPARE by user PA0B, 22-Nov-82 23:50:48
File 1: PK:<PA0B>EXECP.MAC.1
File 2: PK:<PA0B>EXECP.MAC.2
***** CHANGE #1; PAGE 1, LINE 1; PAGE 1, LINE 1
 ---------------------------------
;<5.PCL>EXECP.MAC.2, 21-Nov-82 03:03:44, Edit by PA0B
;CM156 Don't allow RESET, FORK, etc. to play with INVOKE'd forks.
;CM156 Make KEFORK check if it is killing the fork that was the
; current fork or the running fork before an INVOKE was done.
;CM156 Put back (temporarily, while people get used to PRESERVE) the
; the /ENVIRONMENT and /EXEC switches for SAVE.
;CM156 Don't hang at WFORKX if the INVOKE'd program goes hungry before
; we hit the WFORK%.
;CM156 Look at FK%INV instead of PCPRGR to determine if fork is INVOKE'd.
;CM156 In FKTRM1 allow for the case where the INVOKE'd fork has started
; an inferior and the inferior has made the PTY/PDS go hungry.

***** CHANGE #2; PAGE 3, LINE 8; PAGE 3, LINE 8

.RESET::JRST .RESST		;START OFF THE RESET (IN EXECCA)
.RESS1::CAIE A,"*"		;WANT TO RESET ALL?
	 JRST [	SKIPG A,FORK	;NO - TRY CURRENT
		 ERROR <No program>
		JRST .RESE3]
 ---------------------------------

.RESET::JRST .RESST		;START OFF THE RESET (IN EXECCA)
.RESS1::CAIE A,"*"		;WANT TO RESET ALL?
	 JRST [	SKIPG A,FORK	;NO - TRY CURRENT
		 ERROR <No program>
		TMNE FK%INV,SLFTAB(A) ;CM156 Current fork was INVOKE'd?
		 ERROR <No program>   ;CM156 Don't let him do it
		JRST .RESE3]

***** CHANGE #3; PAGE 3, LINE 21; PAGE 3, LINE 23
	 JFCL
RESET0::SKIPG A,FORK		;HAVE CURRENT FORK?
	 JRST RESET2		;NO - CLEAN UP AND EXIT
RESET1:	SKIPN SLFTAB(A)		;YES - IN TABLE?
	 JRST RESET2		;NO - DONE
	HLRZ B,@SLFTAB(A)	;GET HANDLE
 ---------------------------------
	 JFCL
RESET0::SKIPG A,FORK		;HAVE CURRENT FORK?
	 JRST RESET2		;NO - CLEAN UP AND EXIT
RESET1:	SKIPN SLFTAB(A)		;YES - IN TABLE?
	 JRST RESET2		;NO - DONE
	TMNE FK%INV,SLFTAB(A)	;CM156 Current fork was INVOKE'd?
	 JRST RESET2		;CM156 Yes, pretend no such fork
	HLRZ B,@SLFTAB(A)	;GET HANDLE

***** CHANGE #4; PAGE 4, LINE 9; PAGE 4, LINE 9
ERESET::CALL PIOFF		;TURN OFF INTERRUPTS
	SETOM FORK		;SAY NO CURRENT FORK
	SETOM RUNFK		; OR RUNNING FORK
	CALL FREL		;UNMAP PAGES
	MOVSI Q2,-NFRKS		;DO ALL FORKS
ERESE1: MOVX B,FK%KPT!FK%BKG	;KEPT OR BACKGROUND TEST
	SKIPE CCKEEP		;CHECK INTERRUPTED FORKS ALSO?
 ---------------------------------
ERESET::CALL PIOFF		;TURN OFF INTERRUPTS
	SETOM FORK		;SAY NO CURRENT FORK
	SETOM RUNFK		; OR RUNNING FORK
	CALL FREL		;UNMAP PAGES
	MOVSI Q2,-NFRKS		;DO ALL FORKS
ERESE1: MOVX B,FK%KPT!FK%BKG!FK%INV ;CM156 KEPT OR BACKGROUND or INVOKE'd TEST
	SKIPE CCKEEP		;CHECK INTERRUPTED FORKS ALSO?

***** CHANGE #5; PAGE 4, LINE 71; PAGE 4, LINE 71
	 SETOM IDFORK
MIC,<
	CAMN A,MICFRK		;MIC HERE
	 SETOM MICFRK
>
	RET
 ---------------------------------
	 SETOM IDFORK
MIC,<
	CAMN A,MICFRK		;MIC HERE
	 SETOM MICFRK
>
	MOVE B,[-2]		;CM156 Special uninitialized value
	CAMN A,PCFORK		;CM156 Saved copy of FORK from INVOKE?
	 MOVEM B,PCFORK		;CM156 Yep, we don't want to restore this value
				; to FORK later then
	CAMN A,PCRNFK		;CM156 Saved copy of RUNFK from INVOKE?
	 MOVEM B,PCRNFK		;CM156 Yep, we don't want to restore this value
	RET

***** CHANGE #6; PAGE 5, LINE 7; PAGE 5, LINE 7
;STEP TO NEXT FORK

NXTFRK:	MOVEI A,NFRKS-1		;LOOK THRU TABLE
NXTFR1:	SKIPN FRKTAB(A)		;EXISTS?
	 JRST NXTFR2		;NO - TRY NEXT
	HLRZ B,@FRKTAB(A)	;GET OWNER
 ---------------------------------
;STEP TO NEXT FORK

NXTFRK:	MOVEI A,NFRKS-1		;LOOK THRU TABLE
NXTFR1:	SKIPN FRKTAB(A)		;EXISTS?
	 JRST NXTFR2		;NO - TRY NEXT
	MOVE B,FRKTAB(A)	;CM156 Get fork flags
	TXNE B,FK%INV		;CM156 INVOKE'd fork?
	 JRST NXTFR2		;CM156 Yes, ignore it
	HLRZ B,@FRKTAB(A)	;GET OWNER

***** CHANGE #7; PAGE 13, LINE 63; PAGE 13, LINE 63
	CAIN A,.FHSLF		;DON'T CHECK IF "FORK 0"
	 RET
	SKIPN B,SLFTAB(A)	;KNOW ABOUT THIS FORK?
	 JRST [	ETYPE < %% Unknown fork%_>
		RET]
	HLRZ B,.FKOWN(B)	;GET OWNER HANDLE
 ---------------------------------
	CAIN A,.FHSLF		;DON'T CHECK IF "FORK 0"
	 RET
	SKIPN B,SLFTAB(A)	;KNOW ABOUT THIS FORK?
	 JRST [	ETYPE < %% Unknown fork%_>
		RET]
	TXNE B,FK%INV		;CM156 INVOKE'd fork?
	 ERROR <No such fork>	;CM156 Ignore it
	HLRZ B,.FKOWN(B)	;GET OWNER HANDLE

***** CHANGE #8; PAGE 22, LINE 15; PAGE 22, LINE 15
	CALL SAVNAM		;MAKE THE DEFAULT FILESPEC
	MOVEM B,CJFNBK+.GJNAM
	HRROI A,[ASCIZ /EXE/]	;DEFAULT EXTENSION
	MOVEM A,CJFNBK+.GJEXT
	SETZM CJFNBK+.GJF2	;NO SPECIAL FLAGS
	MOVEI B,[FLDDB. .CMFIL,,,,,]
	CALL FLDSKP		;READ THE FILE NAME
	 CMERRX

	SKIPGE FORK		;PCL
	ERROR <No program>
 ---------------------------------
	CALL SAVNAM		;MAKE THE DEFAULT FILESPEC
	MOVEM B,CJFNBK+.GJNAM
	HRROI A,[ASCIZ /EXE/]	;DEFAULT EXTENSION
	MOVEM A,CJFNBK+.GJEXT
	SETZM CJFNBK+.GJF2	;NO SPECIAL FLAGS
	MOVEI B,$SAVE		;CM156
	CALL FLDSKP		;READ THE FILE NAME
	 CMERRX
	LDB D,[331100,,(C)]	;CM156 See which was parsed
	CAIE D,.CMSWI		;CM156 Switch?
	JRST SAV1		;CM156 No, a file name
	CALL GETKEY		;CM156 Get jump address
	JRST (P3)		;CM156 Do specific processing routine

SAV1:	SKIPGE FORK		;CM156
	ERROR <No program>

***** CHANGE #9; PAGE 24, LINE 37; PAGE 24, LINE 37
	SKIPE STAYF		;WANT TO STAY AT COMMAND LEVEL?
	 IORM B,SLFTAB(A)	;YES - SET BACKGROUND
	SETZM CIPF		;CLEAR "COMMAND IN PROGRESS", SO ^T REPORTS WHAT PROGRAM'S DOING
	SKIPE STAYF		;STAYING AT COMMAND LEVEL?
	JRST NOWAIT		;YES, DONT'T WAIT FOR PROGRAM TO HALT
WFORKX::WFORK			;PCL WAIT.  WFORKX: M-U-S-T BE ON WFORK
	FFORK			;FREEZE IT IMMEDIATELY
NOWAIT:	MOVE A,RUNFK		;HANDLE TO A (FORK JUST RUN)
	CALL RFTYMD		;SAVE PROGRAM MODES
 ---------------------------------
	SKIPE STAYF		;WANT TO STAY AT COMMAND LEVEL?
	 IORM B,SLFTAB(A)	;YES - SET BACKGROUND
	SETZM CIPF		;CLEAR "COMMAND IN PROGRESS", SO ^T REPORTS WHAT PROGRAM'S DOING
	SKIPE STAYF		;STAYING AT COMMAND LEVEL?
	JRST NOWAIT		;YES, DONT'T WAIT FOR PROGRAM TO HALT
	SKIPN PCWAIT		;CM156 Do not wait if we have just received PSI
WFORKX::WFORK			;PCL WAIT.  WFORKX: M-U-S-T BE ON WFORK
	FFORK			;FREEZE IT IMMEDIATELY
NOWAIT:	SETZM PCWAIT		;CM156
	MOVE A,RUNFK		;HANDLE TO A (FORK JUST RUN)
	CALL RFTYMD		;SAVE PROGRAM MODES

***** CHANGE #10; PAGE 24, LINE 60; PAGE 24, LINE 62
				;IF LINK LEFT NAME SOMEWHERE IN ADDRESS
				;SPACE OR PSB (FOR JSYS TO READ), WE
				;COULD MAKE "SAVE<CR>" WORK IN THIS CASE
	TLZ Z,RUNF		;SAY PROG'S TTY MODES NOT IN EFFECT
	MOVEI Q1,ETTYMD		;RESTORE EXEC'S TTY MODES
	SKIPN PCPRGR		;PCL Not if controlled program
	CALL LTTYMD		;..
 ---------------------------------
				;IF LINK LEFT NAME SOMEWHERE IN ADDRESS
				;SPACE OR PSB (FOR JSYS TO READ), WE
				;COULD MAKE "SAVE<CR>" WORK IN THIS CASE
	TLZ Z,RUNF		;SAY PROG'S TTY MODES NOT IN EFFECT
	MOVEI Q1,ETTYMD		;RESTORE EXEC'S TTY MODES
;	SKIPN PCPRGR		;PCL Not if controlled program
	TMNN FK%INV,SLFTAB(A)	;CM156 If not controlled program
	CALL LTTYMD		;..

***** CHANGE #11; PAGE 24, LINE 88; PAGE 24, LINE 91
	CAIE B,.RFRUN		;DON'T PRINT ANOTHER MESSAGE FOR JSYS TRAPS HERE
	CAIN B,.RFHLT		;SEE IF ERROR HALT
	CAIA			;STANDARD HALT OR JSYS TRAP (ALREADY REPORTED)
	JRST FKTRM1		;ERROR, GO ANALYZE.
	MOVE A,FORK		;GET FORK HANDLE
	SKIPE PCPRGR		;PCL Controlled program?
	RET			;PCL Yes, leave it at that
 ---------------------------------
	CAIE B,.RFRUN		;DON'T PRINT ANOTHER MESSAGE FOR JSYS TRAPS HERE
	CAIN B,.RFHLT		;SEE IF ERROR HALT
	CAIA			;STANDARD HALT OR JSYS TRAP (ALREADY REPORTED)
	JRST FKTRM1		;ERROR, GO ANALYZE.
	MOVE A,FORK		;GET FORK HANDLE
;	SKIPE PCPRGR		;PCL Controlled program?
	TMNE FK%INV,SLFTAB(A)	;CM156 Controlled program?
	RET			;PCL Yes, leave it at that

***** CHANGE #12; PAGE 25, LINE 14; PAGE 25, LINE 14
		MOVEI A,WAITF	;NOT EXPIRED, KEEP RUNNING FORK
		RET]		;DISPATCH VIA WAITF, CLEANING STACK
	CAIN C,.RFTRP		;JSYS/UUO TRAP???
	 JRST [	MOVE B,LRFSTS+.RFPPC	;LOAD PC FOR USE WITH %Y
		ERROR <JSYS or UUO trap at %2Y>]
	CAIN C,.RFIO		;PCL Waiting for I/O?
	SKIPN PCPRGR		;PCL Is it a controlled program?
	TRNA			;PCL No
	RET			;PCL Yes, the usual case
	CAIE C,.RFFPT		;FORCED TERMINATION (UNENABLED ERROR PSI)
 ---------------------------------
		MOVEI A,WAITF	;NOT EXPIRED, KEEP RUNNING FORK
		RET]		;DISPATCH VIA WAITF, CLEANING STACK
	CAIN C,.RFTRP		;JSYS/UUO TRAP???
	 JRST [	MOVE B,LRFSTS+.RFPPC	;LOAD PC FOR USE WITH %Y
		ERROR <JSYS or UUO trap at %2Y>]
	TMNE FK%INV,SLFTAB(A)	;CM156 Controlled program
	 JRST [ CAIN C,.RFIO	;CM156 In I/O wait?
		 RET		;CM256 Normal, let PCL handle it
		CAIN C,.RFWAT	;CM156 Waiting for inferior?
		 RET		;CM156 Probably inferior doing I/O to PTY/PDS
		CAIN C,.RFRUN	;CM156 Runnable?
		 RET		;CM156 Probably inferior doing I/O to PTY/PDS
		CAIN C,.RFSLP	;CM156 Dismissed?
		 RET		;CM156 Probably inferior doing I/O to PTY/PDS
		JRST .+1]	;CM156 Something else, so invoked fork must
				; have died somehow
	CAIE C,.RFFPT		;FORCED TERMINATION (UNENABLED ERROR PSI)

    