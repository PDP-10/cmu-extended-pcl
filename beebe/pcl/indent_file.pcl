STRING	indent_file_input_file;

STRING	indent_file_output_file;

INTEGER	indent_file_indentation;

COMMAND indent_file;
!------------------------------------------------------------------------
! Purpose:
!	Indent lines of a file;
!
! Usage:
!	indent_file /INDENT:nn infile outfile
!
! Remarks:
!	The switch may occur before, between, or after the file names.
!	If the switch is omitted, a default indentation of 15 columns is
!	assumed.  If the output file is omitted, a new generation of the
!	input file is assumed.  Arguments are remembered (with generation
!	numbers removed) so that they may be omitted on successive calls.
!	Indentation may be positive (right shifting) or negative (left 
!	shifting with deletion) or zero (straight copy).  Default file
!	extensions are both ".LST".
!
! Author:
!	Nelson H.F. Beebe, Department of Physics, University of Utah,
!	Salt Lake City, UT 84112.
!
! Date:
!	[28-Oct-80]
!
!------------------------------------------------------------------------
BEGIN

EXTERNAL STRING PROCEDURE
	filedevice,
	filedirectory,
	filename,
	fileextension,
	filegeneration,
	removegeneration,
	newgeneration;

EXTERNAL STRING		indent_file_input_file,indent_file_output_file;

EXTERNAL INTEGER	indent_file_indentation;

STRING input_file,output_file,record,blanks,default_indentation;

INTEGER i,indent;

default_indentation = "15";

GUIDE "right or left";

indent = $INTEGER(default_indentation);
input_file = "";
output_file = "";

WHILE output_file = "" DO PARSE(

SWITCH(WORDS(INDENT::1)) : PARSE(NUMBER (DEFAULT default_indentation) :
	BEGIN
	indent = $VALUE;
	indent_file_indentation = indent ! replace previous value
	END);

EOL :	IF input_file = "" 
	THEN BEGIN ! Supply previous values
		input_file = indent_file_input_file;
		output_file = indent_file_output_file;
		indent = indent_file_indentation;
		IF input_file = "" THEN ABORT "No saved arguments";
		IF output_file = "" THEN ABORT "No saved arguments"
		END
	ELSE IF output_file = "" 
	THEN output_file = input_file;

FILE	(HELP "input file name",DEFAULT_EXT "LST",INPUT) : 
	BEGIN
	input_file = $FILEL;
	PARSE(

	SWITCH(WORDS(INDENT::1)) : PARSE(NUMBER (DEFAULT default_indentation) :
		 indent = $VALUE);

	FILE	(HELP "output file name",DEFAULT_EXT "LST",OUTPUT) :
		 output_file = $FILEL;

	EOL	(HELP "carriage return if output file same as input file") :
		BEGIN
		output_file = input_file;
		output_file = NEWGENERATION (output_file)
		END)
	END);


DISPLAY "Input file  = " + input_file;
DISPLAY NORETURN  "Output file = " + output_file;
DISPLAY " indented " + $STRING(indent) + " column(s)";

CALL $OpenInput (input_file);
CALL $OpenOutput (output_file);

IF indent > 0 THEN
	BEGIN
	blanks = "";
	i = 0;
	WHILE i < indent DO 
		BEGIN
		i = i + 1;
		blanks = " " + blanks
		END
	END;

record = $Read;
WHILE $EOF = 0 DO
	BEGIN
	IF indent > 0
	THEN record = blanks + record
	ELSE IF indent < 0 THEN record = record[1-indent:*];
	CALL $Write (record);
	record = $Read
	END;

CALL $CloseInput (input_file);
CALL $CloseOutput (output_file);

! Save global variables for next time, removing generation numbers.

indent_file_input_file = REMOVEGENERATION(input_file) + ".0";
indent_file_output_file = NEWGENERATION(output_file);
indent_file_indentation = indent

END;
